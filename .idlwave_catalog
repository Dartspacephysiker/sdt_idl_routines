;;
;; IDLWAVE catalog for library sdtlib
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Wed Dec  3 15:10:08 2014
;;
(setq idlwave-library-catalog-libname "sdtlib")
(setq idlwave-library-catalog-routines
 '(("Get_fa_th" fun nil (lib "get_fa_th.pro" nil "sdtlib") "Result = %s(inputTime, bin)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("Get_fa_seb6_ts" fun nil (lib "get_fa_seb6_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("dimen_shift" fun nil (lib "dimen_shift.pro" nil "sdtlib") "Result = %s(x, shft)" (nil))
   ("time_string" fun nil (lib "time_string.pro" nil "sdtlib") "Result = %s(time0)" (nil ("date_only") ("epoch") ("format") ("msec") ("precision") ("sql")))
   ("get_fa_ses_hdr" fun nil (lib "get_fa_ses_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("compare_cdf_db" pro nil (lib "compare_cdf_db.pro" nil "sdtlib") "%s, first, last" (nil ("append") ("ontimes") ("orbarray") ("out") ("qty") ("trouble") ("version")))
   ("load_po_pwi" pro nil (lib "load_po_pwi.pro" nil "sdtlib") "%s" (nil ("data") ("TIME_RANGE")))
   ("vth_3d" fun nil (lib "vth_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("sun" pro nil (lib "rotmat.pro" nil "sdtlib") "%s, iyr, iday, secs, gst, slong, srasn, sdec, s" (nil))
   ("rotmat" pro nil (lib "rotmat.pro" nil "sdtlib") "%s, time, geogei, geigse, geigsm, geism, geigsq, geigsr, dgei, rgei, s" (nil))
   ("queryorbattcnt" fun "sybcon" (lib "sybcon__queryorbattcnt.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(sdatetime, edatetime)" (nil))
   ("load_wi_em_3dp" pro nil (lib "load_wi_em_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("prefix") ("time_range")))
   ("pfcgui_event" pro nil (lib "pfcgui.pro" nil "sdtlib") "%s, e" (nil))
   ("pfcgui" pro nil (lib "pfcgui.pro" nil "sdtlib") "%s" (nil))
   ("get_fa_tsop_hdr" fun nil (lib "get_fa_tsop_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("get_fa_seb_hdr" fun nil (lib "get_fa_seb_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("load_fa_k0_tms" pro nil (lib "load_fa_k0_tms.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("orbit") ("tplot") ("trange") ("var")))
   ("pitch2d" pro nil (lib "pitch2d.pro" nil "sdtlib") "%s, tempdat" (nil ("COLOR") ("EBINS") ("ENERGY") ("ERANGE") ("ERROR_BARS") ("LABEL") ("LIMITS") ("MSEC") ("OVERPLOT") ("RETRACE") ("TITLE") ("UNITS") ("XTITLE") ("YTITLE")))
   ("Get_fa_tph" fun nil (lib "get_fa_tph.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("p_3d" fun nil (lib "p_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("time_pb5" fun nil (lib "time_pb5.pro" nil "sdtlib") "Result = %s(time)" (nil ("epoch")))
   ("fa_fields_spec" fun nil (lib "fa_fields_spec.pro" nil "sdtlib") "Result = %s(dat)" (nil ("DB") ("N_AVE") ("NPTS") ("SLIDE") ("STORE") ("STRUCTURE") ("SVY") ("T_NAME") ("TAGS")))
   ("fa_sun_pulse_from_azim" fun nil (lib "fa_sun_pulse_from_azim.pro" nil "sdtlib") "Result = %s(azim, nadir, period)" (nil))
   ("get_" fun nil (lib "get_3d_from_sdt_template.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("EN") ("RETREAT") ("START")))
   ("n_2d_b" fun nil (lib "n_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("get_fa_ieb_hdr" fun nil (lib "get_fa_ieb_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("datestruct" fun nil (lib "datestruct.pro" nil "sdtlib") "Result = %s(stringin)" (nil))
   ("INIT" fun "sybcon" (lib "sybcon__define.pro" nil "sdtlib") "Result = Obj ->[%s::]%s" (nil ("appname") ("config")))
   ("print" pro "sybcon" (lib "sybcon__define.pro" nil "sdtlib") "Obj ->[%s::]%s" (nil))
   ("sybclose" pro nil (lib "sybcon__define.pro" nil "sdtlib") "%s, con" (nil))
   ("cleanup" pro "sybcon" (lib "sybcon__define.pro" nil "sdtlib") "Obj ->[%s::]%s" (nil))
   ("CS_DATETIME__DEFINE" pro nil (lib "sybcon__define.pro" nil "sdtlib") "%s" (nil))
   ("SYBCON__DEFINE" pro nil (lib "sybcon__define.pro" nil "sdtlib") "%s" (nil))
   ("maxwellian_1" pro nil (lib "maxwellian_1.pro" nil "sdtlib") "%s, x, a, f, pder" (nil ("INDEX") ("UNITS")))
   ("get_3dt" pro nil (lib "get_3dt.pro" nil "sdtlib") "%s, funct, get_dat" (nil ("BINS") ("ERANGE") ("NAME")))
   ("v_2d_fs" fun nil (lib "v_2d_fs.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("sum3d_hdr" fun nil (lib "sum3d_hdr.pro" nil "sdtlib") "Result = %s(d1, d2)" (nil ("HDR_IND") ("SPIN")))
   ("is_leap_year" fun nil (lib "is_leap_year.pro" nil "sdtlib") "Result = %s(year)" (nil))
   ("str_element" pro nil (lib "str_element.pro" nil "sdtlib") "%s, struct, name" (nil ("INDEX") ("VALUE")))
   ("sectime" fun nil (lib "sectime.pro" nil "sdtlib") "Result = %s(insec)" (nil))
   ("ff_magfix" pro nil (lib "ff_magfix.pro" nil "sdtlib") "%s, mag, Bphase" (nil ("filt") ("freq") ("max_chi")))
   ("append_array" pro nil (lib "append_array.pro" nil "sdtlib") "%s, a0, a1" (nil))
   ("Get_fa_tba_eq" fun nil (lib "get_fa_tba_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("loss_cone_width" fun nil (lib "loss_cone_width.pro" nil "sdtlib") "Result = %s(alt, ilat)" (nil))
   ("curvout" fun nil (lib "curvout.pro" nil "sdtlib") "Result = %s(xc, yc, weightsc, apar, sigma)" (nil ("CHI2") ("CHISQ") ("FUNCTION_NAME") ("ITER") ("ITMAX") ("MAX_TOSS") ("NODERIVATIVE") ("SHOW") ("TOL") ("TOSSED") ("USED")))
   ("get_" fun nil (lib "get_ts_1p_from_sdt_template.pro" nil "sdtlib") "Result = %s(time)" (nil))
   ("contour2d" pro nil (lib "contour2d.pro" nil "sdtlib") "%s, tempdat" (nil ("BW") ("FILL") ("LAB_0") ("LAB_180") ("LAB_90") ("LABEL") ("LEVELS") ("LIMITS") ("MSEC") ("NCONT") ("POLAR") ("PURE") ("RETRACE") ("ROTATE") ("TITLE") ("UNITS") ("VEL") ("XMARGIN") ("XTITLE") ("YMARGIN") ("YTITLE")))
   ("what_orbit_is" fun nil (lib "what_orbit_is.pro" nil "sdtlib") "Result = %s(timec)" (nil))
   ("get_fa_seb5_hdr" fun nil (lib "get_fa_seb5_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("n_2d_fs" fun nil (lib "n_2d_fs.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("pmplot" pro nil (lib "pmplot.pro" nil "sdtlib") "%s" (nil ("BINS") ("DATA") ("LABELS") ("LABFLAG") ("LABPOS") ("LIMITS") ("NOCOLOR") ("NOXLAB") ("OPLOT") ("OVERPLOT")))
   ("add_btot" pro nil (lib "add_btot.pro" nil "sdtlib") "%s, MagDC" (nil ("nsmooth")))
   ("Get_fa_tpo" fun nil (lib "get_fa_tpo.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("get_timespan" pro nil (lib "get_timespan.pro" nil "sdtlib") "%s, t" (nil))
   ("pclose" pro nil (lib "pclose.pro" nil "sdtlib") "%s" (nil ("printer")))
   ("make_fa_esa_struct" fun nil (lib "make_fa_esa_struct.pro" nil "sdtlib") "Result = %s(dimsizes)" (nil))
   ("load_i8_pla" pro nil (lib "load_i8_pla.pro" nil "sdtlib") "%s" (nil ("data") ("time_range")))
   ("fa_nadir_from_horiz" fun nil (lib "fa_nadir_from_horiz.pro" nil "sdtlib") "Result = %s(horizCross, orbData)" (nil))
   ("Matfrombas" fun nil (lib "matfrombas.pro" nil "sdtlib") "Result = %s(old1, old2, old3, new1, new2, new3)" (nil))
   ("series_compress" fun nil (lib "series_compress.pro" nil "sdtlib") "Result = %s(series, delimit)" (nil))
   ("pb5_to_time" fun nil (lib "pb5_to_time.pro" nil "sdtlib") "Result = %s(pb5)" (nil))
   ("pick_limits" fun nil (lib "default_dc_limits.pro" nil "sdtlib") "Result = %s(name, choices, tstart, tstop)" (nil ("frac_on_scale") ("positive")))
   ("default_dc_limits" pro nil (lib "default_dc_limits.pro" nil "sdtlib") "%s" (nil ("SDT") ("tstart") ("tstop")))
   ("pdqplot" pro nil (lib "pdqplot.pro" nil "sdtlib") "%s, data" (nil))
   ("Get_fa_seb5_ts" fun nil (lib "get_fa_seb5_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("get_pa_spec_ts" pro nil (lib "get_pa_spec_ts.pro" nil "sdtlib") "%s, get_dat" (nil ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("eweight") ("floor") ("gap_time") ("missing") ("n_get_pts") ("name") ("no_data") ("retrace") ("shift90") ("T1") ("T2") ("units")))
   ("get_E_perp" pro nil (lib "get_E_perp.pro" nil "sdtlib") "%s, tt1, tt2" (nil ("NO_PLOT")))
   ("_get_example_dat" pro nil (lib "_get_example_dat.pro" nil "sdtlib") "%s" (nil ("n_samples") ("seed")))
   ("gen_fa_k0_ees_gifps" pro nil (lib "gen_fa_k0_ees_gifps.pro" nil "sdtlib") "%s" (nil ("bw") ("k0")))
   ("dimen2" fun nil (lib "dimen2.pro" nil "sdtlib") "Result = %s(matrx)" (nil))
   ("coord_trans" pro nil (lib "coord_trans.pro" nil "sdtlib") "%s, str_in, str_out, type" (nil ("slow")))
   ("doy_to_month_date" pro nil (lib "doy_to_month_date.pro" nil "sdtlib") "%s, year, doy, month, date" (nil))
   ("datetimesec" fun nil (lib "datetimesec.pro" nil "sdtlib") "Result = %s(stringin)" (nil))
   ("horizon_cross" fun nil (lib "horizon_cross.pro" nil "sdtlib") "Result = %s(att)" (nil ("omega") ("orb") ("phase") ("return_omega") ("show") ("suntimes")))
   ("find_handle" fun nil (lib "find_handle.pro" nil "sdtlib") "Result = %s(name, tagname)" (nil))
   ("transform_velocity" pro nil (lib "convert_vframe.pro" nil "sdtlib") "%s, vel, theta, phi, deltav" (nil ("sx") ("sy") ("sz") ("VX") ("VY") ("VZ")))
   ("convert_vframe" fun nil (lib "convert_vframe.pro" nil "sdtlib") "Result = %s(tdata, vframe)" (nil ("bins") ("dfdv") ("ethresh") ("EVALUES") ("EXTRAPOLATE") ("INTERPOLATE")))
   ("select_range" fun nil (lib "select_range.pro" nil "sdtlib") "Result = %s(xc, x0, x1, nrange)" (nil))
   ("noise" fun nil (lib "noise.pro" nil "sdtlib") "Result = %s(dqd_name)" (nil ("BASE")))
   ("geoc2geod" pro nil (lib "geoc2geod.pro" nil "sdtlib") "%s, lat_in, alt_in, lat_out, alt_out" (nil ("GC_RADIUS") ("IAU67") ("INVERSE") ("RADIANS")))
   ("cuts" pro nil (lib "cuts.pro" nil "sdtlib") "%s" (nil ("name")))
   ("Get_fa_tbp_eq" fun nil (lib "get_fa_tbp_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("padplot" pro nil (lib "padplot.pro" nil "sdtlib") "%s, tempdat" (nil ("COLOR") ("EBINS") ("LABEL") ("LIMITS") ("MULTI") ("NOCOLOR") ("OPLOT") ("UNITS")))
   ("Allocatearray" fun nil (lib "allocatearray.pro" nil "sdtlib") "Result = %s(type, nDims, dim)" (nil))
   ("svdout" fun nil (lib "svdout.pro" nil "sdtlib") "Result = %s(xc, yc, nsvd)" (nil ("CHISQ") ("COVAR") ("FUNCT") ("SHOW") ("SINGULAR") ("TOSSED") ("USED") ("VARIANCE") ("WEIGHT") ("YFIT")))
   ("get_po_orbit" pro nil (lib "get_po_orbit.pro" nil "sdtlib") "%s, intime1, intime2" (nil ("ALL") ("DELTA_T") ("no_store") ("STATUS") ("structure") ("time_array")))
   ("panplottimeaxis" fun nil (lib "panplot.pro" nil "sdtlib") "Result = %s(axis, index, value)" (nil))
   ("panplot" pro nil (lib "panplot.pro" nil "sdtlib") "%s" (nil ("stamp") ("timeoff") ("title") ("xaxis") ("xdata") ("yaxis") ("ydata")))
   ("Get_md_from_sdt" fun nil (lib "get_md_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil ("ADVANCE") ("EN") ("INDEX") ("RETREAT") ("START") ("TIME")))
   ("what_fa_sees" pro nil (lib "what_fa_sees.pro" nil "sdtlib") "%s, orbit" (nil))
   ("fa_ttof_calibration" fun nil (lib "fa_ttof_calibration.pro" nil "sdtlib") "Result = %s(energy, spec, pac, version, time)" (nil ("debug")))
   ("missing_tags" fun nil (lib "missing_tags.pro" nil "sdtlib") "Result = %s(struct, req_tags_call)" (nil ("absent") ("quiet")))
   ("cdf_var_exists" fun nil (lib "cdf_var_exists.pro" nil "sdtlib") "Result = %s(cdf, varname)" (nil))
   ("xfastorbhelp" pro nil (lib "xfastorbhelp.pro" nil "sdtlib") "%s" (nil ("group")))
   ("fa_fields_store" pro nil (lib "fa_fields_store.pro" nil "sdtlib") "%s, data, next_data, junk1, junk2, junk3, junk4, junk5, junk6" (nil ("NAME")))
   ("tms_surv_get_angles" pro nil (lib "tms_surv_get_angles.pro" nil "sdtlib") "%s, theta, dtheta, phi, dphi" (nil))
   ("Get_fa_seb3_c" fun nil (lib "get_fa_seb3_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("load_so_cst" pro nil (lib "load_so_cst.pro" nil "sdtlib") "%s" (nil ("TIME_RANGE")))
   ("fa_fields_cross" fun nil (lib "fa_fields_cross.pro" nil "sdtlib") "Result = %s(dat1)" (nil ("chan2") ("DT") ("N_AVE") ("NPTS") ("SLIDE") ("STORE") ("STRUCTURE") ("SVY") ("TAGS") ("TALK")))
   ("tplot" pro nil (lib "tplot.pro" nil "sdtlib") "%s, datanames" (nil ("ADD_VAR") ("LASTVAR") ("MIX") ("NAMES") ("NEW") ("NOCOLOR") ("OPLOT") ("OPTIONS") ("OVERPLOT") ("PICK") ("REFDATE") ("T_OFFSET") ("TITLE") ("TRANGE") ("VAR_LABEL") ("VER") ("WINDOW")))
   ("sybcon" fun nil (lib "sybcon.pro" nil "sdtlib") "Result = %s" (nil ("appname") ("config")))
   ("queryorbattres" fun "sybcon" (lib "sybcon__queryorbattres.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(sdatetime, edatetime, qty_list, name)" (nil))
   ("get_fa_spin_rate" fun nil (lib "get_fa_spin_rate.pro" nil "sdtlib") "Result = %s(tc, xc)" (nil ("one_only") ("phase") ("precise")))
   ("Get_fa_seb1_ts" fun nil (lib "get_fa_seb1_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("get_2dt_ts_pot" pro nil (lib "get_2dt_ts_pot.pro" nil "sdtlib") "%s, funct, get_dat" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("floor") ("gap_time") ("missing") ("n_get_pts") ("name") ("no_data") ("sc_pot") ("T1") ("T2")))
   ("make_data_double" pro nil (lib "make_data_double.pro" nil "sdtlib") "%s, data" (nil))
   ("sub3d" fun nil (lib "sub3d.pro" nil "sdtlib") "Result = %s(d1, d2)" (nil))
   ("add_str_element" pro nil (lib "add_str_element.pro" nil "sdtlib") "%s, struct, tag_name, value" (nil ("delete") ("replace")))
   ("load_wi_or" pro nil (lib "load_wi_or.pro" nil "sdtlib") "%s" (nil ("data") ("nodata") ("polar") ("pre") ("time_range")))
   ("omni3d" fun nil (lib "omni3d.pro" nil "sdtlib") "Result = %s(dat)" (nil ("bins")))
   ("fa_shadow" pro nil (lib "fa_shadow.pro" nil "sdtlib") "%s, t1, t2" (nil ("DELTA_T") ("FOOTPOINT") ("NO_CALL") ("NO_STORE") ("STRUC") ("USE")))
   ("FA_TS_EFF_EQ" fun nil (lib "fa_ts_eff_eq.pro" nil "sdtlib") "Result = %s(en, pac, spec, mode, spin_section, eff_version, time)" (nil))
   ("load_wi_3dp" pro nil (lib "load_wi_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("time_range") ("vthermal")))
   ("omni2d" fun nil (lib "omni2d.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("fa_nadir_sun_azim" fun nil (lib "fa_nadir_sun_azim.pro" nil "sdtlib") "Result = %s(nadir, orb)" (nil))
   ("secdatetime" fun nil (lib "secdatetime.pro" nil "sdtlib") "Result = %s(secin)" (nil ("FMT")))
   ("gclose" pro nil (lib "gclose.pro" nil "sdtlib") "%s" (nil ("printer")))
   ("monthyrfrom" fun nil (lib "monthyrfrom.pro" nil "sdtlib") "Result = %s(start_time, n_strings, increment)" (nil))
   ("make_efields_cdf" pro nil (lib "make_efields_cdf.pro" nil "sdtlib") "%s, data_str" (nil))
   ("show_dqis" pro nil (lib "show_dqis.pro" nil "sdtlib") "%s" (nil ("result")))
   ("xfastorbparm_ev" pro nil (lib "xfastorbparm.pro" nil "sdtlib") "%s, event" (nil))
   ("xfastorbparm" pro nil (lib "xfastorbparm.pro" nil "sdtlib") "%s" (nil ("group_leader")))
   ("sphere_to_cart" pro nil (lib "sphere_to_cart.pro" nil "sdtlib") "%s, r, theta, phi, x, y, z" (nil ("vec")))
   ("convert_esa_units2" pro nil (lib "convert_esa_units2.pro" nil "sdtlib") "%s, data, units" (nil ("SCALE")))
   ("make_sfa_cdf" pro nil (lib "make_sfa_cdf.pro" nil "sdtlib") "%s, data_str" (nil ("t1") ("t2")))
   ("gts_concatenate" pro nil (lib "gts_concatenate.pro" nil "sdtlib") "%s" (nil ("DATA_DIRECTORY") ("DOY1_RE") ("DOY2_RE") ("PREFIX") ("QUANTITIES") ("YEAR_RE")))
   ("je_2d_fs" fun nil (lib "je_2d_fs.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("specplot" pro nil (lib "specplot.pro" nil "sdtlib") "%s, x, y, z" (nil ("data") ("limits")))
   ("get_fa_2d_fields" fun nil (lib "get_fa_2d_fields.pro" nil "sdtlib") "Result = %s(dqd, time1, time2)" (nil ("ALL") ("BACKGROUND") ("CALIBRATE") ("EN") ("NPTS") ("PANB") ("PANF") ("SPIN") ("START") ("STORE") ("STRUCTURE") ("YBINS")))
   ("Get_fa_tsa" fun nil (lib "get_fa_tsa.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("fasthelp" pro nil (lib "fasthelp.pro" nil "sdtlib") "%s" (nil))
   ("dipole_offset" fun nil (lib "dipole_offset.pro" nil "sdtlib") "Result = %s(refyear)" (nil))
   ("geomag" fun nil (lib "geomag.pro" nil "sdtlib") "Result = %s(time, time2)" (nil))
   ("ff_smooth" fun nil (lib "ff_smooth.pro" nil "sdtlib") "Result = %s(data, n_sm)" (nil ("detrend") ("sm_funct") ("w")))
   ("files_exist" fun nil (lib "files_exist.pro" nil "sdtlib") "Result = %s(file_spec_list)" (nil))
   ("plot_po_overlay" pro nil (lib "plot_po_overlay.pro" nil "sdtlib") "%s" (nil ("EXPAND") ("FLAT") ("FLNG") ("TAG_COLOR") ("TIME_ARRAY")))
   ("print_options" pro nil (lib "print_options.pro" nil "sdtlib") "%s" (nil ("ASPECT") ("BW") ("COLOR") ("DIRECTORY") ("FONT") ("LANDSCAPE") ("PORTRAIT") ("PRINTER") ("XSIZE") ("YSIZE")))
   ("load_ac_fields" fun nil (lib "load_ac_fields.pro" nil "sdtlib") "Result = %s" (nil))
   ("var_range" fun nil (lib "var_range.pro" nil "sdtlib") "Result = %s(x)" (nil))
   ("fa_output_path" fun nil (lib "fa_output_path.pro" nil "sdtlib") "Result = %s(bp, dl, type, orb, fd, ext)" (nil))
   ("old_makecdf" pro nil (lib "old_makecdf.pro" nil "sdtlib") "%s, data" (nil ("filename") ("overwrite") ("tagnames")))
   ("get_fa_att_diag" pro nil (lib "get_fa_att_diag.pro" nil "sdtlib") "%s, t1, t2" (nil))
   ("send" fun "sybcon" (lib "sybcon__send.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(comm, name)" (nil))
   ("finish_hist" pro nil (lib "finish_hist.pro" nil "sdtlib") "%s, bins, hist" (nil ("_extra")))
   ("bitplot" pro nil (lib "bitplot.pro" nil "sdtlib") "%s, x, y" (nil ("data") ("di") ("limits") ("overplot") ("psyms")))
   ("xlim" pro nil (lib "xlim.pro" nil "sdtlib") "%s, lim, min, max, log" (nil ("log")))
   ("secofday" fun nil (lib "secofday.pro" nil "sdtlib") "Result = %s(hour, min, sec, milsec)" (nil))
   ("fa_web_path" fun nil (lib "fa_web_path.pro" nil "sdtlib") "Result = %s(bp, t, dl, type, orb, ac, ext)" (nil))
   ("get_" fun nil (lib "get_md_ts_from_sdt_template.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("START") ("STIDX")))
   ("Get_fa_tbo" fun nil (lib "get_fa_tbo.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("interp_mag" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(mag_in)" (nil))
   ("fix_magx" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, magx, mag_fix, time_fix" (nil))
   ("fix_magy" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, magy, mag_fix, time_fix" (nil))
   ("fix_magz" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, magz, mag_fix, time_fix" (nil))
   ("SVDFIT4" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(X, Y, M)" (nil ("CHISQ") ("COVAR") ("Funct") ("SINGULAR") ("VARIANCE") ("WEIGHT") ("YFIT")))
   ("spin_tone_fit" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, BB, dtime, coef, tspin, ttag" (nil ("bfit")))
   ("spinbase_mag" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(t, nparams)" (nil))
   ("get_cal_history" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(fname)" (nil ("cal_version") ("debug") ("fdf_predict")))
   ("get_mag_dqis" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s" (nil))
   ("get_mag_tweak" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, pseudo, mag, spin_fit, tw, ofst" (nil ("cal_version") ("do_recal") ("fdf_predict") ("no_recal") ("norepair") ("useraw")))
   ("get_quartiles" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(vals)" (nil))
   ("tweaker_coeff_fit" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(tw, tw_time, fit_time)" (nil ("width")))
   ("running_total" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(vv)" (nil))
   ("outlier_rejection" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(d_in)" (nil ("wt")))
   ("get_torquer_mag" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(spinfit, mag, tw, torquer)" (nil ("debug")))
   ("fix_up_spin" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s, frq, phs" (nil ("debug") ("flags") ("is_sun") ("no_query") ("nsm1") ("nsm2") ("nsm3") ("nsm4") ("time_error")))
   ("get_sun_ra_dec" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(t_arr)" (nil))
   ("interpolate_matrix" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(mat, mag)" (nil))
   ("interpolate_phase" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(phs, frq, mag)" (nil))
   ("vector_cross_product" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(v1, v2)" (nil))
   ("vector_dot_product" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(v1, v2)" (nil))
   ("set_dipole_orient" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(req_epoch)" (nil ("use_igrf7")))
   ("transform_vector" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(trans, in_vec)" (nil ("inverse")))
   ("set_igrf_coefficients" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s" (nil ("igrf_vers")))
   ("calculate_igrf" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(posn, gs, hs)" (nil))
   ("get_new_igrf" pro nil (lib "ucla_mag_lib.pro" nil "sdtlib") "%s" (nil ("no_store_old") ("use_igrf7")))
   ("get_phase_from_attctrl" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s" (nil ("debug")))
   ("patch_spin_phase" fun nil (lib "ucla_mag_lib.pro" nil "sdtlib") "Result = %s(phase_data, exp_ra, exp_dec)" (nil ("force_patch") ("no_model") ("no_patch") ("no_query")))
   ("load_fields_modes" fun nil (lib "load_fields_modes.pro" nil "sdtlib") "Result = %s" (nil ("spin")))
   ("Get_fa_seb4_ts" fun nil (lib "get_fa_seb4_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("fast_i_summary" pro nil (lib "fast_i_summary.pro" nil "sdtlib") "%s" (nil ("BW") ("k0")))
   ("get_2dt" pro nil (lib "get_2dt.pro" nil "sdtlib") "%s, funct, get_dat" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("floor") ("gap_time") ("missing") ("name") ("no_data") ("T1") ("T2")))
   ("ff_mag_torque" pro nil (lib "ff_mag_torque.pro" nil "sdtlib") "%s, mag, fit" (nil ("add_sig") ("max_sig") ("max_x0") ("plot") ("talk")))
   ("secdate" fun nil (lib "secdate.pro" nil "sdtlib") "Result = %s(secin, remainder)" (nil ("FMT")))
   ("data_cut" fun nil (lib "data_cut.pro" nil "sdtlib") "Result = %s(name, t)" (nil ("COUNT") ("EXTRAPOLATE") ("GAP_DIST") ("INTERP_GAP") ("MISSING")))
   ("v_2d_b" fun nil (lib "v_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("power_spec" pro nil (lib "power_spec.pro" nil "sdtlib") "%s, data, freq, ave_spec" (nil ("CHATTY") ("N_AVE") ("NPTS") ("OVERLAP") ("SAMPLE")))
   ("p_2d" fun nil (lib "p_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("tlimit" pro nil (lib "tlimit.pro" nil "sdtlib") "%s, d1, d2" (nil ("FULL") ("LAST") ("REFDATE") ("ZOOM")))
   ("p_2d_b" fun nil (lib "p_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("Get_fa_seb5_c" fun nil (lib "get_fa_seb5_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("symmetry_dir" fun nil (lib "symmetry_dir.pro" nil "sdtlib") "Result = %s(Pt)" (nil))
   ("ff_ptr_to_dat" pro nil (lib "ff_ptr_to_dat.pro" nil "sdtlib") "%s, dat" (nil ("double") ("streak") ("tags") ("talk")))
   ("default_ac_limits" pro nil (lib "default_ac_limits.pro" nil "sdtlib") "%s" (nil ("SDT")))
   ("find_str_element" fun nil (lib "find_str_element.pro" nil "sdtlib") "Result = %s(struct, name)" (nil ("VALUE")))
   ("hist_norm" pro nil (lib "hist_norm.pro" nil "sdtlib") "%s, data" (nil ("_EXTRA") ("BINSIZE") ("COMPLEMENT") ("CONDITION") ("HISTOGRAM") ("MAX") ("MIN") ("NAN") ("NO_ERROR") ("NO_PLOT") ("NPOINTS") ("OMAX") ("OMIN") ("REVERSE_INDICES") ("SHOW_NUMBERS") ("SIGMA") ("XBINS")))
   ("dimen1" fun nil (lib "dimen1.pro" nil "sdtlib") "Result = %s(matrx)" (nil))
   ("data_to_normal" fun nil (lib "data_to_normal.pro" nil "sdtlib") "Result = %s(datav, s)" (nil))
   ("v_3d" fun nil (lib "v_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("get_sdt_timespan" fun nil (lib "get_sdt_timespan.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("DQD")))
   ("ff_despin_svy_long" pro nil (lib "ff_despin_svy_long.pro" nil "sdtlib") "%s" (nil ("bad") ("epar") ("eperp") ("fix_zero") ("fmax") ("mpot") ("pot") ("store") ("sweeps") ("t1") ("t2") ("t_res") ("time") ("v1") ("v14") ("v4") ("v5") ("v58") ("v8")))
   ("fast_elec_summary" pro nil (lib "version2.pro" nil "sdtlib") "%s" (nil))
   ("terminator" pro nil (lib "terminator.pro" nil "sdtlib") "%s, tlat, tlng" (nil ("TIME")))
   ("makegif" pro nil (lib "makegif.pro" nil "sdtlib") "%s, filename" (nil))
   ("makecdf" pro nil (lib "makecdf.pro" nil "sdtlib") "%s, datavary" (nil ("datanovary") ("filename") ("gattributes") ("overwrite") ("status") ("tagsnovary") ("tagsvary") ("vattributes")))
   ("mplot" pro nil (lib "mplot.pro" nil "sdtlib") "%s, x, y, dy" (nil ("BINS") ("COLORS") ("DATA") ("LABELS") ("LABFLAG") ("LABPOS") ("LIMITS") ("NOCOLOR") ("NOXLAB") ("OPLOT") ("OVERPLOT")))
   ("yrfrom" fun nil (lib "yrfrom.pro" nil "sdtlib") "Result = %s(start_time, n_strings)" (nil))
   ("ff_fixtime" pro nil (lib "ff_fixtime.pro" nil "sdtlib") "%s, time" (nil ("fix") ("kept")))
   ("get_fa_eeb_hdr" fun nil (lib "get_fa_eeb_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("modsin" fun nil (lib "fa_fields_spinfit.pro" nil "sdtlib") "Result = %s(phi, nparams)" (nil))
   ("fa_fields_spinfit" fun nil (lib "fa_fields_spinfit.pro" nil "sdtlib") "Result = %s(data)" (nil ("COEFFICENTS") ("FUNCT") ("INTERVAL") ("MAG") ("NOTCH") ("SHOW") ("SLIDE") ("STORE") ("TIMES") ("X") ("Y")))
   ("Get_cache_md_from_sdt" fun nil (lib "get_cache_md_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code, cache_hsk, cache)" (nil ("ADVANCE") ("CACHE_SIZE") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START") ("TIME")))
   ("xyouts2" pro nil (lib "xyouts2.pro" nil "sdtlib") "%s, x, y, string" (nil ("_extra") ("pnorm")))
   ("fast_ef_summary" pro nil (lib "fast_ef_summary.pro" nil "sdtlib") "%s" (nil ("BW") ("k0")))
   ("plot_fa_orbit" pro nil (lib "plot_fa_orbit.pro" nil "sdtlib") "%s" (nil ("def")))
   ("get_fa_orbit_times_db" fun nil (lib "get_fa_orbit_times_db.pro" nil "sdtlib") "Result = %s(orbit)" (nil))
   ("get_2dt_ts" pro nil (lib "get_2dt_ts.pro" nil "sdtlib") "%s, funct, get_dat" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("floor") ("gap_time") ("missing") ("n_get_pts") ("name") ("no_data") ("T1") ("T2")))
   ("dimen" fun nil (lib "dimen.pro" nil "sdtlib") "Result = %s(matrx)" (nil))
   ("raven_sun_pos" pro nil (lib "raven_sun_pos.pro" nil "sdtlib") "%s, itime, slong, srasn, sdec, vector" (nil ("DEGREES")))
   ("unbend_axes" pro nil (lib "get_transverse_mags.pro" nil "sdtlib") "%s, t, bx, by, bz, bmodel, s, vel, ilat" (nil))
   ("get_transverse_mags" fun nil (lib "get_transverse_mags.pro" nil "sdtlib") "Result = %s(mdc, t1, t2)" (nil ("interval") ("load_structure") ("no_store") ("orb") ("slide") ("stefan")))
   ("Get_fa_ieb" fun nil (lib "get_fa_ieb.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("get_fa_hsbm_hdr" pro nil (lib "get_fa_hsbm_hdr.pro" nil "sdtlib") "%s, burst_times, hsbm_hdr" (nil ("CHATTY")))
   ("get_fa_th_hdr" fun nil (lib "get_fa_th_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("Get_fa_ies" fun nil (lib "get_fa_ies.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("Get_fa_ees_ts" fun nil (lib "get_fa_ees_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("calc_fa_esa_geom" fun nil (lib "calc_fa_esa_geom.pro" nil "sdtlib") "Result = %s(dat, inst_mode)" (nil))
   ("get_sdt_run_idx" fun nil (lib "get_sdt_run_idx.pro" nil "sdtlib") "Result = %s" (nil))
   ("Get_fa_seb3" fun nil (lib "get_fa_seb3.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("results" fun "sybcon" (lib "sybcon__results.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(name)" (nil))
   ("ff_shift_pole" fun nil (lib "ff_shift_pole.pro" nil "sdtlib") "Result = %s(data, new_pole, sample_time)" (nil ("old_pole")))
   ("xfastorb_ev" pro nil (lib "xfastorb.pro" nil "sdtlib") "%s, event" (nil))
   ("xfastorbkill" pro nil (lib "xfastorb.pro" nil "sdtlib") "%s, kill_id" (nil))
   ("xfastorbbadev" pro nil (lib "xfastorb.pro" nil "sdtlib") "%s" (nil ("group")))
   ("xfastorb" pro nil (lib "xfastorb.pro" nil "sdtlib") "%s" (nil ("group_leader")))
   ("get_fa_fdf_att" fun nil (lib "get_fa_fdf_att.pro" nil "sdtlib") "Result = %s(intime)" (nil ("fdf_dir") ("file")))
   ("ff_phase_zc" fun nil (lib "ff_phase_zc.pro" nil "sdtlib") "Result = %s(time_, data_)" (nil ("freq") ("period") ("tzero")))
   ("Eiesa_unpack_surv_hdr" fun nil (lib "eiesa_unpack_surv_hdr.pro" nil "sdtlib") "Result = %s(dataStruct)" (nil))
   ("iton" fun nil (lib "iton.pro" nil "sdtlib") "Result = %s(ind)" (nil))
   ("get_fa_v158" fun nil (lib "get_fa_v158.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CUTOFF") ("DEFAULT") ("EN") ("NPTS") ("PANB") ("PANF") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE")))
   ("fa_fields_despin_4k" pro nil (lib "fa_fields_despin_4k.pro" nil "sdtlib") "%s, V58, V14, V1458" (nil ("fudge") ("mag_notch") ("phase") ("save_mem") ("shadow_notch") ("spec") ("store") ("time")))
   ("fa_fields_cyclotron" pro nil (lib "fa_fields_cyclotron.pro" nil "sdtlib") "%s, mag" (nil ("filt") ("t1") ("t2")))
   ("compare_cdf_ats" pro nil (lib "compare_cdf_ats.pro" nil "sdtlib") "%s, first, last" (nil ("append") ("ontimes") ("orbarray") ("out") ("qty") ("trouble")))
   ("load_dc_fields" fun nil (lib "load_dc_fields.pro" nil "sdtlib") "Result = %s" (nil ("hires")))
   ("fa_fields_despin_hsbm" pro nil (lib "fa_fields_despin_hsbm.pro" nil "sdtlib") "%s, hsbm" (nil ("b_ang") ("phase") ("three_d")))
   ("get_fa_potential" fun nil (lib "get_fa_potential.pro" nil "sdtlib") "Result = %s(time1c, time2c)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE")))
   ("update_fa_att" pro nil (lib "update_fa_att.pro" nil "sdtlib") "%s, start, finish" (nil))
   ("plot3d" pro nil (lib "plot3d.pro" nil "sdtlib") "%s, tbindata, latitude, longitude" (nil ("BINS") ("BNCENTER") ("EBINS") ("LABELS") ("MAP") ("PROC3D") ("PTLIMIT") ("SMOOTH") ("STACK") ("SUM_EBINS") ("TBINS") ("UNITS")))
   ("fast_fields_summary" pro nil (lib "fast_fields_summary.pro" nil "sdtlib") "%s" (nil ("bw") ("noclean") ("test")))
   ("set_sdt_index" pro nil (lib "set_sdt_index.pro" nil "sdtlib") "%s, InSdtRunIdx" (nil))
   ("Get_fa_seb1" fun nil (lib "get_fa_seb1.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("poly_eval" fun nil (lib "poly_eval.pro" nil "sdtlib") "Result = %s(t, c)" (nil))
   ("Get_fa_tsp" fun nil (lib "get_fa_tsp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("long2bytes" fun nil (lib "write_au_ulaw.pro" nil "sdtlib") "Result = %s(input)" (nil))
   ("write_au_ulaw" pro nil (lib "write_au_ulaw.pro" nil "sdtlib") "%s, file, data" (nil ("NOSCALE") ("RATE") ("TEXT")))
   ("load_wi_wav" pro nil (lib "load_wi_wav.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("moon") ("nvdata") ("time_range")))
   ("Get_fa_seb" fun nil (lib "get_fa_seb.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("calib") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("convert_tms_units2" pro nil (lib "convert_tms_units2.pro" nil "sdtlib") "%s, data, units" (nil ("sc") ("SCALE")))
   ("get_fa_th_3d" fun nil (lib "get_fa_th_3d.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("gen_fa_cdf_mscrub" pro nil (lib "gen_fa_cdf_mscrub.pro" nil "sdtlib") "%s" (nil))
   ("prestens" fun nil (lib "prestens.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ESTEPRANGE")))
   ("fa_fields_sfa" pro nil (lib "fa_fields_sfa.pro" nil "sdtlib") "%s, V58, V14" (nil ("burst") ("fix12") ("mag") ("save_mem") ("store") ("t1") ("t2")))
   ("get_data" pro nil (lib "get_data.pro" nil "sdtlib") "%s, name, time, data, values" (nil ("alimits_str") ("data_str") ("dlimits_str") ("index") ("limits_str")))
   ("find_gaps" fun nil (lib "find_gaps.pro" nil "sdtlib") "Result = %s(data, ngaps)" (nil ("slop") ("spike")))
   ("bmean" pro nil (lib "bmean.pro" nil "sdtlib") "%s, x, y" (nil ("_EXTRA") ("BINSIZE") ("BMEAN") ("MAX_IN_BIN") ("MAX_YVALUE") ("MAXDEX") ("MEDIAN") ("MIN_YVALUE") ("MINPTS") ("NAN") ("NO_ERROR") ("NO_PLOT") ("NPTS") ("OMAX") ("OMIN") ("REVERSE_INDICES") ("SCATTER") ("SHOW_NUMBERS") ("SIGMA") ("TOTAL") ("XBINS") ("XRANGE") ("YRANGE")))
   ("t_2d_fs" fun nil (lib "t_2d_fs.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("datesec_doy" fun nil (lib "datesec_doy.pro" nil "sdtlib") "Result = %s(yr, doy)" (nil))
   ("tplot_panel" pro nil (lib "tplot_panel.pro" nil "sdtlib") "%s, time, y" (nil ("deltatime") ("oplotvar") ("panel") ("psym") ("variable")))
   ("Get_fa_tsa_eq" fun nil (lib "get_fa_tsa_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("time_stamp" pro nil (lib "time_stamp.pro" nil "sdtlib") "%s" (nil ("charsize") ("off") ("on")))
   ("get_fa_tb_hdr" fun nil (lib "get_fa_tb_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("Get_fa_seb3_ts" fun nil (lib "get_fa_seb3_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("Get_fa_ees_c" fun nil (lib "get_fa_ees_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("plot_fa_k0_tms" pro nil (lib "plot_fa_k0_tms.pro" nil "sdtlib") "%s" (nil))
   ("fa_fields_pwt" pro nil (lib "fa_fields_pwt.pro" nil "sdtlib") "%s, pwt, trk" (nil ("t1") ("t2") ("trig_dat")))
   ("make_tms_svy_cdf" pro nil (lib "make_tms_svy_cdf.pro" nil "sdtlib") "%s" (nil ("GAP_TIME") ("NAME") ("NBINS") ("NENERGY") ("SPECIES") ("T1") ("T2") ("UNITS")))
   ("get_fa_seb6_hdr" fun nil (lib "get_fa_seb6_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("get_en_spec_ts" pro nil (lib "get_en_spec_ts.pro" nil "sdtlib") "%s, get_dat" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("floor") ("gap_time") ("missing") ("n_get_pts") ("name") ("no_data") ("retrace") ("T1") ("T2") ("units")))
   ("load_fa_k0_ees_day" pro nil (lib "load_fa_k0_ees_day.pro" nil "sdtlib") "%s, filename" (nil ("dir") ("dvar") ("var")))
   ("Get_fa_tbo_3d" fun nil (lib "get_fa_tbo_3d.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("load_ge_mgf" pro nil (lib "load_ge_mgf.pro" nil "sdtlib") "%s" (nil ("data") ("nvdata") ("polar") ("time_range")))
   ("get_fa_ies_hdr" fun nil (lib "get_fa_ies_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("Get_fa_ies_c" fun nil (lib "get_fa_ies_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("data_only" fun nil (lib "data_only.pro" nil "sdtlib") "Result = %s(qty)" (nil ("THRESH")))
   ("je_2d_b" fun nil (lib "je_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("datetimesec_var" fun nil (lib "datetimesec_var.pro" nil "sdtlib") "Result = %s(dayin, monin, yrin, hrin, minin, secin, mscin)" (nil))
   ("bytescale" fun nil (lib "bytescale.pro" nil "sdtlib") "Result = %s(array)" (nil ("BOTTOM") ("LOG") ("MAX_VALUE") ("MIN_VALUE") ("MISSING") ("pure_color") ("RANGE") ("TOP") ("ZERO")))
   ("datesec" fun nil (lib "datesec.pro" nil "sdtlib") "Result = %s(stringin)" (nil))
   ("deltas" fun nil (lib "deltas.pro" nil "sdtlib") "Result = %s(x)" (nil))
   ("load_wi_epa" pro nil (lib "load_wi_epa.pro" nil "sdtlib") "%s" (nil))
   ("label_foot_ticks" pro nil (lib "label_foot_ticks.pro" nil "sdtlib") "%s" (nil ("COLOR") ("INTERVAL") ("LATITUDE") ("LATLIM") ("LONGITUDE") ("TIME_ARRAY")))
   ("hist_compare" pro nil (lib "hist_compare.pro" nil "sdtlib") "%s, x1, x2" (nil ("_extra") ("binsize") ("hist1") ("hist2") ("label1") ("label2") ("label3") ("no_error") ("no_legend") ("no_plot") ("quiet") ("rev1") ("rev2") ("sigma1") ("sigma2") ("xbins") ("xlabel3") ("xlegend") ("ylabel3") ("ylegend")))
   ("angle_to_bins" fun nil (lib "angle_to_bins.pro" nil "sdtlib") "Result = %s(dat, an)" (nil ("EBIN")))
   ("queryorbit" fun "sybcon" (lib "sybcon__queryorbit.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(sdatetime, edatetime, name)" (nil))
   ("draw_zero_lines" pro nil (lib "gen_fa_k0_dcf_gifps.pro" nil "sdtlib") "%s, names" (nil ("EXCLUDE")))
   ("gen_fa_k0_dcf_gifps" pro nil (lib "gen_fa_k0_dcf_gifps.pro" nil "sdtlib") "%s, dcnamesc" (nil ("default_table") ("ps_table") ("ptypes") ("screen") ("sdt") ("single") ("splot_time") ("times")))
   ("ucla_mag_despin" pro nil (lib "ucla_mag_despin.pro" nil "sdtlib") "%s" (nil ("cal_version") ("calctorq") ("default") ("delta_phi") ("do_develop") ("do_tweak") ("force_patch") ("labflag") ("no_patch") ("no_query") ("no_spin_tone") ("no_torq") ("no_tweak") ("not_fdf") ("not_raw") ("not_rgb") ("old_igrf") ("orbit") ("query") ("spin_axis") ("tw_mat") ("use_fdf") ("use_igrf7") ("use_rgb") ("useraw") ("vec_cols")))
   ("queryorbitnscrossings" fun "sybcon" (lib "sybcon__queryorbitnscrossings.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(sdatetime, edatetime, name)" (nil))
   ("Get_fa_tso_eq" fun nil (lib "get_fa_tso_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("load_fa_k0_dcf" pro nil (lib "oct00_load_fa_k0_dcf.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("orbit") ("trange") ("var")))
   ("make_day_cdf" pro nil (lib "make_day_cdf.pro" nil "sdtlib") "%s, dataset, year, month, day" (nil ("indexfile") ("length") ("sktfile") ("status") ("verbose") ("versionnumber")))
   ("fast_if_summary" pro nil (lib "fast_if_summary.pro" nil "sdtlib") "%s" (nil ("BW") ("k0")))
   ("countcdfrvarrecs" fun nil (lib "countcdfrvarrecs.pro" nil "sdtlib") "Result = %s(filespec)" (nil ("count")))
   ("energy_to_ebin" fun nil (lib "energy_to_ebin.pro" nil "sdtlib") "Result = %s(dat, en)" (nil ("BIN")))
   ("Get_fa_seb2_c" fun nil (lib "get_fa_seb2_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("mbar4particles" pro nil (lib "mbar4particles.pro" nil "sdtlib") "%s, orbit" (nil))
   ("get_ts_1p_from_sdt" fun nil (lib "get_ts_1p_from_sdt.pro" nil "sdtlib") "Result = %s(data_type, sat_code, inputTime)" (nil ("INDEX")))
   ("esa_anode_calib" pro nil (lib "esa_anode_calib.pro" nil "sdtlib") "%s, orbit" (nil ("DATASRC") ("DIR") ("ENERGY") ("SDT") ("SHOW4") ("SHOW8") ("SHOWALL")))
   ("gen_fa_k0_ies_gifps" pro nil (lib "gen_fa_k0_ies_gifps.pro" nil "sdtlib") "%s" (nil ("bw") ("k0")))
   ("c_3d" fun nil (lib "c_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("get_fa_sunnadir" fun nil (lib "get_fa_sunnadir.pro" nil "sdtlib") "Result = %s(times, horizCross, period)" (nil ("GOOD_INDICES")))
   ("get_left_from_sdt" fun nil (lib "get_left_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil))
   ("get_pa_spec" pro nil (lib "get_pa_spec.pro" nil "sdtlib") "%s, data_str" (nil ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("eweight") ("floor") ("gap_time") ("missing") ("name") ("no_data") ("retrace") ("shift90") ("T1") ("T2") ("units")))
   ("ff_dce_fix" pro nil (lib "ff_dce_fix.pro" nil "sdtlib") "%s, dat, time, zero, zt, ratio, rt" (nil))
   ("time_double" fun nil (lib "time_double.pro" nil "sdtlib") "Result = %s(time)" (nil ("dim") ("epoch") ("pb5")))
   ("querygeomag" fun "sybcon" (lib "sybcon__querygeomag.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(sdatetime, edatetime, name)" (nil))
   ("ff_mag_twkdat" pro nil (lib "ff_mag_twkdat.pro" nil "sdtlib") "%s, mag, tw" (nil ("plot") ("talk")))
   ("get_fa_mscrub_multerrs" fun nil (lib "get_fa_mscrub_multerrs.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("START")))
   ("idl_type" fun nil (lib "idl_type.pro" nil "sdtlib") "Result = %s(x)" (nil))
   ("cdf_attr_exists" fun nil (lib "cdf_attr_exists.pro" nil "sdtlib") "Result = %s(cdf, attrname)" (nil ("scope")))
   ("ff_mag_twd" fun nil (lib "ff_mag_twd.pro" nil "sdtlib") "Result = %s(mag, fit)" (nil ("max_sig") ("n_sm") ("plot") ("talk")))
   ("ang_from_a2b_about_s" fun nil (lib "ang_from_a2b_about_s.pro" nil "sdtlib") "Result = %s(a, b, s)" (nil))
   ("fdf_orb_write" fun nil (lib "fdf_orb_write.pro" nil "sdtlib") "Result = %s" (nil ("EPOCH") ("FILE") ("POSITION") ("VELOCITY")))
   ("Get_fa_eeb" fun nil (lib "get_fa_eeb.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("calib") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("get_color_indx" fun nil (lib "get_colors.pro" nil "sdtlib") "Result = %s(color)" (nil))
   ("get_colors" fun nil (lib "get_colors.pro" nil "sdtlib") "Result = %s" (nil ("array") ("colors")))
   ("plot_fa_k0_ees" pro nil (lib "plot_fa_k0_ees.pro" nil "sdtlib") "%s" (nil))
   ("ilat_cross" pro nil (lib "ilat_cross.pro" nil "sdtlib") "%s, time1, time2" (nil ("DELTA_T") ("DRAG_PROP") ("FILE") ("FOOTLAT") ("GEOLAT") ("LAT") ("ORBIT") ("OUTGOING") ("OUTLAT") ("OUTTIME") ("TIME_ARRAY")))
   ("get_fast_esa_mdata_bundled" fun nil (lib "get_fast_esa_mdata_bundled.pro" nil "sdtlib") "Result = %s(dqi)" (nil ("ADESC1") ("ADESC2") ("ADESC3") ("ALL") ("EINDEX") ("ETIME") ("SINDEX") ("STIME")))
   ("enlarge_periodic" fun nil (lib "smooth_periodic.pro" nil "sdtlib") "Result = %s(orig_image, n)" (nil))
   ("smooth_periodic" fun nil (lib "smooth_periodic.pro" nil "sdtlib") "Result = %s(old_image, n)" (nil))
   ("fastorbfileread" pro nil (lib "fastorbfileread.pro" nil "sdtlib") "%s" (nil ("new")))
   ("substr" fun nil (lib "substr.pro" nil "sdtlib") "Result = %s(ss, from, to, num)" (nil))
   ("plot_fa_att" pro nil (lib "plot_fa_att.pro" nil "sdtlib") "%s, time" (nil ("BW") ("NOTEXT") ("PS") ("SCALE") ("VECTOR")))
   ("box" pro nil (lib "box.pro" nil "sdtlib") "%s, limits, x, y" (nil ("data")))
   ("Get_fa_seb4" fun nil (lib "get_fa_seb4.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("diag_p" pro nil (lib "diag_p.pro" nil "sdtlib") "%s, p, n" (nil ("s") ("t")))
   ("data_type" fun nil (lib "data_type.pro" nil "sdtlib") "Result = %s(val)" (nil ("STRUCTURE")))
   ("j_2d" fun nil (lib "j_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("v_2d" fun nil (lib "v_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("fetch" fun "sybcon" (lib "sybcon__fetch.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(row)" (nil))
   ("modsin" fun nil (lib "spinfit4sumplots.pro" nil "sdtlib") "Result = %s(phi, nparams)" (nil))
   ("spinfit4sumplots" fun nil (lib "spinfit4sumplots.pro" nil "sdtlib") "Result = %s(tecall, eplanecall, tbcall, bplanecall, bspincall, ts, ex, ez, bx, bz, by, spin_angle, b2call)" (nil ("hires")))
   ("load_fa_k0_dcf" pro nil (lib "load_fa_k0_dcf.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("orbit") ("trange") ("var")))
   ("Get_fa_ses_ts" fun nil (lib "get_fa_ses_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("get_fa_attitude" pro nil (lib "get_fa_attitude.pro" nil "sdtlib") "%s, arg1, arg2" (nil ("attlevel") ("coord") ("delta_t") ("show_bad_att") ("show_ext_att") ("show_good_att") ("show_inputs") ("show_valid") ("status") ("time_array")))
   ("fa_fields_magdc" fun nil (lib "fa_fields_magdc.pro" nil "sdtlib") "Result = %s" (nil ("ave_per") ("fit1") ("fit2") ("iterate") ("max_err") ("max_sig") ("max_sig2") ("max_sig3") ("max_x0") ("min_streak") ("n_sm") ("n_sm_twd") ("nper_trq") ("npts_per_spin") ("npts_speed_after") ("npts_speed_before") ("plot") ("t1") ("t2") ("talk") ("twd1") ("twd2") ("tws1") ("tws2")))
   ("gen_fa_k0_tms_gifps" pro nil (lib "gen_fa_k0_tms_gifps.pro" nil "sdtlib") "%s" (nil ("bw") ("k0")))
   ("timetick" fun nil (lib "timetick.pro" nil "sdtlib") "Result = %s(start_tm, end_tm, st_en_flag, offset, datelab)" (nil ("DATELABFMT") ("FMT")))
   ("resamp" fun nil (lib "resamp.pro" nil "sdtlib") "Result = %s(tcall, xcall, tpcall)" (nil ("slow")))
   ("Get_fa_tball_ts" fun nil (lib "get_fa_tball_ts.pro" nil "sdtlib") "Result = %s(inputTime, endtime)" (nil ("ALL") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("repair_time" fun nil (lib "get_fa_fields.pro" nil "sdtlib") "Result = %s(time, kept, streak_starts, streak_lengths)" (nil))
   ("get_fa_fields" fun nil (lib "get_fa_fields.pro" nil "sdtlib") "Result = %s(dqd, time1c, time2c)" (nil ("ALL") ("BACKGROUND") ("CALIBRATE") ("DEFAULT") ("EN") ("MIN_BUF_LENGTH") ("NPTS") ("PANB") ("PANF") ("QUIET") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE") ("YBINS")))
   ("drawtempl" pro nil (lib "drawtempl.pro" nil "sdtlib") "%s" (nil))
   ("wcopy" pro nil (lib "wcopy.pro" nil "sdtlib") "%s" (nil ("from") ("to")))
   ("tplot_file" pro nil (lib "tplot_file.pro" nil "sdtlib") "%s, handlenames, filenames" (nil ("all") ("direc") ("restore") ("save")))
   ("get_array_struc" fun nil (lib "get_array_struc.pro" nil "sdtlib") "Result = %s(time)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("store_orbit" pro nil (lib "store_orbit.pro" nil "sdtlib") "%s, tstart, tstop" (nil ("orbit_number") ("status")))
   ("load_wi_mfi" pro nil (lib "load_wi_mfi.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("prefix") ("time_range")))
   ("get_tms_hm_spec" pro nil (lib "get_tms_hm_spec.pro" nil "sdtlib") "%s, data_str" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("EBINS") ("ENERGY") ("ERANGE") ("floor") ("gap_time") ("missing") ("name") ("no_data") ("retrace") ("T1") ("T2") ("Time0") ("TSPAN") ("units")))
   ("time_ticks" fun nil (lib "time_ticks.pro" nil "sdtlib") "Result = %s(timerange, offset)" (nil ("help") ("num_lab_min") ("side_label") ("tickinterval") ("xtitle")))
   ("load_i8_mag" pro nil (lib "load_i8_mag.pro" nil "sdtlib") "%s" (nil ("data") ("time_range")))
   ("make_esa_cdf2" pro nil (lib "make_esa_cdf2.pro" nil "sdtlib") "%s, data_str" (nil ("gap_time") ("NBINS") ("NENERGY") ("T1") ("T2") ("units")))
   ("fu_spec2d" pro nil (lib "fu_spec2d.pro" nil "sdtlib") "%s, funct, dat" (nil ("ANGLE") ("ARANGE") ("BINS") ("INTEG_F") ("INTEG_R") ("LIMITS") ("PSYM")))
   ("pwrspc" pro nil (lib "pwrspc.pro" nil "sdtlib") "%s, tp, xp, gnu, xs" (nil ("bin") ("nohanning") ("psd")))
   ("despike_density" pro nil (lib "get_density.pro" nil "sdtlib") "%s, dens, mode" (nil))
   ("get_density" fun nil (lib "get_density.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("CALIBRATE") ("EN") ("NPTS") ("PANB") ("PANF") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE")))
   ("units" pro nil (lib "units.pro" nil "sdtlib") "%s, limit, u" (nil))
   ("ec_2d" fun nil (lib "ec_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("load_fa_k0_ees" pro nil (lib "load_fa_k0_ees.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("nodata") ("orbit") ("trange") ("var")))
   ("make_dsp_cdf" pro nil (lib "make_dsp_cdf.pro" nil "sdtlib") "%s, data_str" (nil ("t1") ("t2")))
   ("sys7_temps_gifs" pro nil (lib "sys7_temps_gifs.pro" nil "sdtlib") "%s, DOY1, YEAR1, DOY2, YEAR2, GIF_DIR" (nil))
   ("get_fa_orbit_times" fun nil (lib "get_fa_orbit_times.pro" nil "sdtlib") "Result = %s(orbit, tstart, tstop)" (nil ("NO_STORE")))
   ("angle_to_bin" fun nil (lib "angle_to_bin.pro" nil "sdtlib") "Result = %s(dat, an)" (nil ("EBIN")))
   ("xfastorbtpaxis_ev" pro nil (lib "xfastorbtpaxis.pro" nil "sdtlib") "%s, event" (nil))
   ("fastorbtpaxis" pro nil (lib "xfastorbtpaxis.pro" nil "sdtlib") "%s" (nil ("load") ("save")))
   ("xfastorbtpaxis" pro nil (lib "xfastorbtpaxis.pro" nil "sdtlib") "%s" (nil ("group")))
   ("n_3d" fun nil (lib "n_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("Get_fa_tpa" fun nil (lib "get_fa_tpa.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("Get_fa_tso" fun nil (lib "get_fa_tso.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("int_up_to" fun nil (lib "int_up_to.pro" nil "sdtlib") "Result = %s(tcall, xcall)" (nil ("ADAMS") ("OLD_WAY")))
   ("minmax_range" fun nil (lib "minmax_range.pro" nil "sdtlib") "Result = %s(tdata)" (nil ("MAX_VALUE") ("MIN_VALUE") ("MXSUBSCRIPT") ("POSITIVE")))
   ("get_file_names" pro nil (lib "get_file_names.pro" nil "sdtlib") "%s, fnames" (nil ("endtimes") ("MASTERFILE") ("NFILES") ("NO_DUPLICATES") ("numrecs") ("ROOT_DIR") ("starttimes") ("TIME_RANGE")))
   ("mat_diag" pro nil (lib "mat_diag.pro" nil "sdtlib") "%s, p" (nil ("EIG_VAL") ("EIG_VEC")))
   ("ff_mag_bufs" pro nil (lib "ff_mag_bufs.pro" nil "sdtlib") "%s, mag, n" (nil ("buf_ends") ("buf_starts") ("delta_t") ("fit")))
   ("trange_str" fun nil (lib "trange_str.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("msec") ("prec")))
   ("get_fa_tpah_hdr" fun nil (lib "get_fa_tpah_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("fill_fa_esa_from_ts_get" fun nil (lib "fill_fa_esa_from_ts_get.pro" nil "sdtlib") "Result = %s(dat, units, header_bytes, got_header_bytes)" (nil ("CALIBRATE")))
   ("ndimen" fun nil (lib "ndimen.pro" nil "sdtlib") "Result = %s(matrx)" (nil))
   ("Get_fa_seb2_ts" fun nil (lib "get_fa_seb2_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("get_" fun nil (lib "get_2d_from_sdt_template.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("EN") ("RETREAT") ("START")))
   ("get_dqds" fun nil (lib "get_dqds.pro" nil "sdtlib") "Result = %s" (nil ("end_times") ("START_TIMES")))
   ("Get_fa_ies_ts" fun nil (lib "get_fa_ies_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("make_po_cdf_mastfiles" pro nil (lib "make_po_cdf_mastfiles.pro" nil "sdtlib") "%s" (nil))
   ("solar_pos" pro nil (lib "solar_pos.pro" nil "sdtlib") "%s, time, gst, slong, srasn, sdec, S" (nil))
   ("Head" pro nil (lib "head.pro" nil "sdtlib") "%s, array" (nil ("number")))
   ("load_fa_k0_ies_day" pro nil (lib "load_fa_k0_ies_day.pro" nil "sdtlib") "%s" (nil ("dir") ("environvar") ("filenames")))
   ("ctime" pro nil (lib "ctime.pro" nil "sdtlib") "%s, time, value" (nil ("append") ("color") ("exact") ("inds") ("npoints") ("panel") ("PROMPT") ("psym") ("silent") ("sleep") ("vname")))
   ("get_fa_tb_hdr_ts" fun nil (lib "get_fa_tb_hdr_ts.pro" nil "sdtlib") "Result = %s(inputTime, endTime)" (nil ("ALL") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("timebar" pro nil (lib "timebar.pro" nil "sdtlib") "%s, t1" (nil ("color") ("linestyle") ("quiet") ("thick")))
   ("array_union" fun nil (lib "array_union.pro" nil "sdtlib") "Result = %s(a, b)" (nil))
   ("ff_dat_to_ptr" pro nil (lib "ff_dat_to_ptr.pro" nil "sdtlib") "%s, dat" (nil ("double") ("streak") ("tags") ("talk")))
   ("inreal" fun nil (lib "inreal.pro" nil "sdtlib") "Result = %s(query, dxc)" (nil))
   ("j_2d_fs" fun nil (lib "j_2d_fs.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("ff_notch" fun nil (lib "ff_notch.pro" nil "sdtlib") "Result = %s(dqd, data)" (nil ("Binterp") ("Bnan") ("Bphase") ("Sinterp") ("Snan") ("Sphase")))
   ("time_epoch" fun nil (lib "time_epoch.pro" nil "sdtlib") "Result = %s(time)" (nil))
   ("view" pro nil (lib "anima_sumplot.pro" nil "sdtlib") "%s, qty, orb" (nil ("ERR")))
   ("anima_sumplot" pro nil (lib "anima_sumplot.pro" nil "sdtlib") "%s, qty, firstorb, lastorb" (nil ("ZOOM")))
   ("cart_to_sphere" pro nil (lib "cart_to_sphere.pro" nil "sdtlib") "%s, x, y, z, r, theta, phi" (nil ("co_latitude") ("max_value") ("min_value") ("ph_0_360") ("ph_hist")))
   ("get_fa_edc_long" fun nil (lib "get_fa_edc_long.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("all") ("en") ("npts") ("panb") ("panf") ("start")))
   ("gen_fa_k0_acf_gifps" pro nil (lib "gen_fa_k0_acf_gifps.pro" nil "sdtlib") "%s, acnames" (nil ("default_table") ("ps_table") ("ptypes") ("screen") ("sdt") ("single") ("splot_time") ("times")))
   ("fa_fields_despin" pro nil (lib "fa_fields_despin.pro" nil "sdtlib") "%s, V58, V12" (nil ("Binterp") ("Bnan") ("DAT") ("MAG_NOTCH") ("PHASE") ("SHADOW_NOTCH") ("Sinterp") ("SLOW") ("Snan") ("STORE") ("T1") ("T2") ("USE_V158")))
   ("get_fa_tpop_hdr" fun nil (lib "get_fa_tpop_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("annotate_modebar" pro nil (lib "annotate_modebar.pro" nil "sdtlib") "%s" (nil ("SDT")))
   ("Get_fa_ieb_c" fun nil (lib "get_fa_ieb_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("get_fa_bdc" fun nil (lib "get_fa_bdc.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("all") ("en") ("npts") ("panb") ("panf") ("start")))
   ("fast_elec_summary" pro nil (lib "fast_elec_summary.pro" nil "sdtlib") "%s" (nil))
   ("make_array_struc" pro nil (lib "make_array_struc.pro" nil "sdtlib") "%s, data_str" (nil ("calib")))
   ("xfastorbspec" pro nil (lib "xfastorbspec.pro" nil "sdtlib") "%s" (nil ("group")))
   ("t_2d_b" fun nil (lib "t_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("queryorbittspan" fun "sybcon" (lib "sybcon__queryorbittspan.pro" nil "sdtlib") "Result = Obj ->[%s::]%s(orbit, name)" (nil))
   ("legendre" fun nil (lib "legendre.pro" nil "sdtlib") "Result = %s(x, nsvd)" (nil))
   ("logtick" fun nil (lib "plot_tms_counts.pro" nil "sdtlib") "Result = %s(axis, index, value)" (nil))
   ("pointsplot" fun nil (lib "plot_tms_counts.pro" nil "sdtlib") "Result = %s(s, counts, psym, color, alpha_l, alpha_u, vtotal_l, vtotal_u)" (nil))
   ("pointsplot2" fun nil (lib "plot_tms_counts.pro" nil "sdtlib") "Result = %s(s, counts, psym, color, alpha_l, alpha_u, etotal_l, etotal_u, norm)" (nil))
   ("plot_tms_counts" pro nil (lib "plot_tms_counts.pro" nil "sdtlib") "%s, dat" (nil))
   ("get_fa_seb3_hdr" fun nil (lib "get_fa_seb3_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("share_colors" pro nil (lib "share_colors.pro" nil "sdtlib") "%s" (nil ("colors") ("filename") ("first") ("lun")))
   ("drawpos" pro nil (lib "drawpos.pro" nil "sdtlib") "%s" (nil))
   ("fa_mean" fun nil (lib "fa_mean.pro" nil "sdtlib") "Result = %s(x)" (nil))
   ("getspec" pro nil (lib "getspec.pro" nil "sdtlib") "%s, tp, xp, gnu, xs" (nil ("binsize") ("complex") ("nocondition") ("nohanning") ("psd")))
   ("fast_t_summary" pro nil (lib "fast_t_summary.pro" nil "sdtlib") "%s" (nil ("BW") ("k0")))
   ("tplot_positions" fun nil (lib "tplot_positions.pro" nil "sdtlib") "Result = %s(panels)" (nil ("sizes") ("xm") ("xom") ("ym") ("yom")))
   ("fastorbstation" pro nil (lib "fastorbstation.pro" nil "sdtlib") "%s" (nil))
   ("make_tms_cdf" pro nil (lib "make_tms_cdf.pro" nil "sdtlib") "%s, data_str" (nil ("GAP_TIME") ("NAME") ("NBINS") ("NENERGY") ("NMASS") ("SPECIES") ("T1") ("T2") ("TYPE") ("UNITS")))
   ("Get_md_ts_from_sdt" fun nil (lib "get_md_ts_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil ("ALL") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START") ("t1") ("t2")))
   ("fa_fields_units" pro nil (lib "fa_fields_units.pro" nil "sdtlib") "%s, data" (nil ("data_header") ("verbose")))
   ("Get_fa_ieb_ts" fun nil (lib "get_fa_ieb_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("copy_data" pro nil (lib "copy_data.pro" nil "sdtlib") "%s, oldname, newname" (nil ("LINK")))
   ("ff_despin_hsbm" pro nil (lib "ff_despin_hsbm.pro" nil "sdtlib") "%s, hsbm" (nil ("b_ang") ("bsc") ("delta_t") ("eax") ("epar") ("eperp") ("freqb") ("freqe") ("mode") ("phase") ("phs") ("plot") ("pole") ("store") ("t1") ("t2") ("three_d") ("time") ("v12_fudge")))
   ("sum3d" fun nil (lib "sum3d.pro" nil "sdtlib") "Result = %s(d1, d2)" (nil))
   ("make_fa_cdf_mastfiles" pro nil (lib "make_fa_cdf_mastfiles.pro" nil "sdtlib") "%s, dirnames" (nil))
   ("xfastorbtp_ev" pro nil (lib "xfastorbtp.pro" nil "sdtlib") "%s, event" (nil))
   ("fastorbtpwindrw" pro nil (lib "xfastorbtp.pro" nil "sdtlib") "%s" (nil))
   ("xfastorbtp" pro nil (lib "xfastorbtp.pro" nil "sdtlib") "%s" (nil ("group")))
   ("Get_fa_tbh_3d" fun nil (lib "get_fa_tbh_3d.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("get_fa_ies_sp" fun nil (lib "get_fa_ies_sp.pro" nil "sdtlib") "Result = %s(time)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START") ("VARARR")))
   ("parse_indexfile_rec" pro nil (lib "search_fa_index.pro" nil "sdtlib") "%s, record, start, finish, file, orbit, version" (nil))
   ("interval_overlap" fun nil (lib "search_fa_index.pro" nil "sdtlib") "Result = %s(a, b, c, d)" (nil))
   ("search_fa_index" fun nil (lib "search_fa_index.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ACF") ("DCF") ("EES") ("EXISTS") ("IES") ("MASTERFILE") ("ORBIT") ("TMS") ("VERBOSE")))
   ("hist" pro nil (lib "hist.pro" nil "sdtlib") "%s, data" (nil ("_EXTRA") ("BINSIZE") ("FORCE_BINSIZE") ("HISTOGRAM") ("INPUT") ("MAX") ("MIN") ("NAN") ("NO_ERROR") ("NO_PLOT") ("NORMALIZE") ("OMAX") ("OMIN") ("QUIET") ("REVERSE_INDICES") ("SIGMA") ("XBINS")))
   ("Get_fa_tsp_sp" fun nil (lib "get_fa_tsp_sp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("SPIN_AVER") ("START")))
   ("mhh_strict" pro nil (lib "mk_html_help2.pro" nil "sdtlib") "%s, txtlines" (nil))
   ("mhh_grab_hdr" pro nil (lib "mk_html_help2.pro" nil "sdtlib") "%s, name, dict, infile_indx, libfile_indx, txt_file, verbose, strict" (nil ("allfiles") ("print_purpose")))
   ("mhh_gen_file" pro nil (lib "mk_html_help2.pro" nil "sdtlib") "%s, dict, txt_file, infiles, libfiles, outfile, verbose, title, strict" (nil ("clturbo") ("crosslink")))
   ("mk_html_help2" pro nil (lib "mk_html_help2.pro" nil "sdtlib") "%s, sources, outfile" (nil ("allfiles") ("clturbo") ("crosslink") ("FILENAME") ("print_purpose") ("STRICT") ("TITLE") ("VERBOSE")))
   ("get_fa_tsah_hdr" fun nil (lib "get_fa_tsah_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil))
   ("n_2d" fun nil (lib "n_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("ff_mag_twkfit" fun nil (lib "ff_mag_twkfit.pro" nil "sdtlib") "Result = %s(in_fit, twc)" (nil))
   ("notin" fun nil (lib "notin.pro" nil "sdtlib") "Result = %s(a, b)" (nil))
   ("unwrap" fun nil (lib "unwrap.pro" nil "sdtlib") "Result = %s(phasec)" (nil ("DIVISOR")))
   ("load_so_cel" pro nil (lib "load_so_cel.pro" nil "sdtlib") "%s" (nil ("masterfile") ("time_range")))
   ("load_wi_swe" pro nil (lib "load_wi_swe.pro" nil "sdtlib") "%s" (nil ("data") ("polar") ("time_range")))
   ("load_po_k0" pro nil (lib "load_po_k0.pro" nil "sdtlib") "%s, starttime, endtime" (nil))
   ("ff_mag_twc" fun nil (lib "ff_mag_twc.pro" nil "sdtlib") "Result = %s(fit)" (nil ("talk")))
   ("Get_fa_tb_eq" fun nil (lib "get_fa_tb_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("nan_gap" pro nil (lib "nan_gap.pro" nil "sdtlib") "%s, t, x, gap_size, tdim" (nil))
   ("fa_fields_fft" fun nil (lib "fa_fields_fft.pro" nil "sdtlib") "Result = %s(dat)" (nil ("dt") ("nave") ("npts") ("slide") ("store") ("tags")))
   ("je_3d" fun nil (lib "je_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("load_default_colors" pro nil (lib "load_default_colors.pro" nil "sdtlib") "%s" (nil))
   ("ff_mag_extend" pro nil (lib "ff_mag_extend.pro" nil "sdtlib") "%s, data, time, n_fit" (nil ("t_stop") ("t_strt")))
   ("fa_fields_combine" pro nil (lib "fa_fields_combine.pro" nil "sdtlib") "%s, dat1, dat2" (nil ("add") ("delt_t") ("interp") ("result") ("spline") ("svy") ("tag_1") ("tag_2") ("talk") ("time_offset")))
   ("fa_almanac_dir" fun nil (lib "fa_almanac_dir.pro" nil "sdtlib") "Result = %s" (nil))
   ("Get_fa_ees" fun nil (lib "get_fa_ees.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("Plot_map" pro nil (lib "plot_map.pro" nil "sdtlib") "%s, dat" (nil))
   ("fa_fields_filter" pro nil (lib "fa_fields_filter.pro" nil "sdtlib") "%s, dat, freq" (nil ("buf_dt") ("buf_length") ("db") ("mag") ("min_dt") ("nan") ("poles") ("recursive") ("tags")))
   ("ff_reduce" pro nil (lib "ff_reduce.pro" nil "sdtlib") "%s, dat, t1, t2" (nil ("tags")))
   ("load_correct_orbit" pro nil (lib "load_correct_orbit.pro" nil "sdtlib") "%s, tstart, tstop, orbit0" (nil))
   ("tms_himass_get_angles" pro nil (lib "tms_himass_get_angles.pro" nil "sdtlib") "%s, theta, dtheta, phi, dphi" (nil))
   ("Get_fa_eeb_ts" fun nil (lib "get_fa_eeb_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("plot_positions" fun nil (lib "plot_positions.pro" nil "sdtlib") "Result = %s" (nil ("aspect") ("options") ("out_position") ("region") ("xgap") ("xsizes") ("ygap") ("ysizes")))
   ("Get_fa_seb2" fun nil (lib "get_fa_seb2.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("azonloc" fun nil (lib "azonloc.pro" nil "sdtlib") "Result = %s(mlt, q)" (nil ("degrees") ("latitude") ("poleward") ("south")))
   ("make_day_cdf" pro nil (lib "oct00_make_day_cdf.pro" nil "sdtlib") "%s, dataset, year, month, day" (nil ("indexfile") ("length") ("sktfile") ("status") ("verbose") ("versionnumber")))
   ("get_fa_ees_hdr" fun nil (lib "get_fa_ees_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("poly_out" fun nil (lib "poly_out.pro" nil "sdtlib") "Result = %s(xc, yc, ndegree, yfit, yband, sigma, a)" (nil))
   ("gts" pro nil (lib "gts.pro" nil "sdtlib") "%s" (nil))
   ("ff_magfit" fun nil (lib "ff_magfit.pro" nil "sdtlib") "Result = %s(mag)" (nil ("max_err") ("out") ("plot") ("talk")))
   ("get_ess" fun nil (lib "get_ess.pro" nil "sdtlib") "Result = %s(time)" (nil ("ADVANCE") ("EN") ("RETREAT") ("START") ("VARARR")))
   ("get_fa_seb2_hdr" fun nil (lib "get_fa_seb2_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("interp" fun nil (lib "interp.pro" nil "sdtlib") "Result = %s(y, x, u)" (nil ("index") ("no_check_monotonic")))
   ("missing_dqds" fun nil (lib "missing_dqds.pro" nil "sdtlib") "Result = %s(req_dqds_call)" (nil ("ABSENT") ("QUIET")))
   ("convert_esa_units" pro nil (lib "convert_esa_units.pro" nil "sdtlib") "%s, data, units" (nil ("SCALE")))
   ("Get_fa_seb6" fun nil (lib "get_fa_seb6.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("get_tms_ang" fun nil (lib "get_tms_ang.pro" nil "sdtlib") "Result = %s" (nil))
   ("compare_orbits" pro nil (lib "compare_orbits.pro" nil "sdtlib") "%s" (nil ("DELTA_T") ("DURATION") ("INPUT_FILES") ("KEPLER_INPUT") ("NO_FILES") ("NO_STORE") ("OUTPUT_FILES") ("REFERENCE") ("VECTOR_INPUT")))
   ("j_2d_b" fun nil (lib "j_2d_b.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("pangle" fun nil (lib "pangle.pro" nil "sdtlib") "Result = %s(theta, phi, b_theta, b_phi)" (nil ("vec")))
   ("store_data" pro nil (lib "store_data.pro" nil "sdtlib") "%s, name" (nil ("data") ("delete") ("dlimits") ("limits") ("max") ("min")))
   ("get_fields_mode" fun nil (lib "get_fields_mode.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("CALIBRATE") ("EN") ("NPTS") ("PANB") ("PANF") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE")))
   ("get_zoom_from_sdt" fun nil (lib "get_zoom_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil))
   ("ff_potential" fun nil (lib "ff_potential.pro" nil "sdtlib") "Result = %s(V58, V8, V14, V4)" (nil ("save_mem")))
   ("Get_fa_tso_sp" fun nil (lib "get_fa_tso_sp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("SPIN_AVER") ("START")))
   ("Get_fa_tsh_eq" fun nil (lib "get_fa_tsh_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("make5sec" pro nil (lib "make5sec.pro" nil "sdtlib") "%s, data" (nil ("data_tags") ("gaps") ("given_times") ("ignore_gaps") ("overwrite") ("raw_phase") ("spin_phase") ("tag_type") ("time_bin") ("times_only")))
   ("fast_elec_summary" pro nil (lib "version.pro" nil "sdtlib") "%s" (nil))
   ("get_fa_seb1_hdr" fun nil (lib "get_fa_seb1_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("ff_mag_reject" pro nil (lib "ff_mag_reject.pro" nil "sdtlib") "%s, mag, fit" (nil ("ave_per") ("max_err") ("max_sig") ("n_sm") ("nper_trq") ("npts_per_spin") ("npts_speed_after") ("npts_speed_before") ("plot") ("talk")))
   ("annotate_power" pro nil (lib "annotate_power.pro" nil "sdtlib") "%s" (nil ("SDT")))
   ("get_en_spec" pro nil (lib "get_en_spec.pro" nil "sdtlib") "%s, data_str" (nil ("ANGLE") ("ARANGE") ("BINS") ("bkg") ("CALIB") ("floor") ("gap_time") ("missing") ("name") ("no_data") ("retrace") ("T1") ("T2") ("units")))
   ("draworbit" pro nil (lib "draworbit.pro" nil "sdtlib") "%s" (nil))
   ("xidlcmd_ev" pro nil (lib "xidlcmd.pro" nil "sdtlib") "%s, event" (nil))
   ("xidlcmd" pro nil (lib "xidlcmd.pro" nil "sdtlib") "%s" (nil ("group")))
   ("make_3dmap" fun nil (lib "make_3dmap.pro" nil "sdtlib") "Result = %s(dat, nx, ny)" (nil ("bins") ("highest")))
   ("Get_fa_tsp_eq" fun nil (lib "get_fa_tsp_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("helpfast" pro nil (lib "helpfast.pro" nil "sdtlib") "%s" (nil ("mosaic") ("noinstall")))
   ("strarr_to_arrstr" pro nil (lib "strarr_to_arrstr.pro" nil "sdtlib") "%s, strarr, arrstr" (nil))
   ("modsin" fun nil (lib "despin.pro" nil "sdtlib") "Result = %s(phi, nparams)" (nil))
   ("despin" fun nil (lib "despin.pro" nil "sdtlib") "Result = %s(tecall, ecall, tbcall, bcall, bspincall, ts, ex, ez, bx, bz, by, spin_angle, b2call)" (nil ("hires")))
   ("xyz_to_polar" pro nil (lib "xyz_to_polar.pro" nil "sdtlib") "%s, data" (nil ("co_latitude") ("magnitude") ("max_value") ("min_value") ("missing") ("ph_0_360") ("ph_hist") ("phi") ("theta")))
   ("scat_plot" pro nil (lib "scat_plot.pro" nil "sdtlib") "%s, xname, yname, zname" (nil ("begin_time") ("end_time") ("limits") ("trange")))
   ("sun_mag_diff" pro nil (lib "fa_fields_phase.pro" nil "sdtlib") "%s, time, ang, diff, pder" (nil))
   ("fa_fields_phase" fun nil (lib "fa_fields_phase.pro" nil "sdtlib") "Result = %s(spin_phase)" (nil ("FREQ") ("PRECISE") ("SPIN_AXIS") ("TEST")))
   ("extract_tags" pro nil (lib "extract_tags.pro" nil "sdtlib") "%s, newstruct, oldstruct" (nil ("AXIS") ("CONTOUR") ("EXCEPT_TAGS") ("OPLOT") ("PLOT") ("PRESERVE") ("TAGS") ("XYOUTS")))
   ("crossn3" fun nil (lib "crossn3.pro" nil "sdtlib") "Result = %s(a, b)" (nil))
   ("loadcdf" pro nil (lib "loadcdf.pro" nil "sdtlib") "%s, CDF_file, CDF_var, x0" (nil ("append") ("no_shift") ("nrecs") ("zvar")))
   ("ylimit" pro nil (lib "ylimit.pro" nil "sdtlib") "%s" (nil))
   ("funct_fit2d" pro nil (lib "funct_fit2d.pro" nil "sdtlib") "%s, dat" (nil ("ANGLE") ("ARANGE") ("AUTO") ("BINS") ("COLOR") ("EBARS") ("EBINS") ("ENERGY") ("ERANGE") ("F_UNITS") ("FITF") ("LABEL") ("LIMITS") ("MSEC") ("NFUNCT") ("SUMPLT") ("UNITS")))
   ("reduce_resolution" pro nil (lib "reduce_resolution.pro" nil "sdtlib") "%s, t, x, t_res" (nil ("KEPT")))
   ("get_right_from_sdt" fun nil (lib "get_right_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil))
   ("make_mag_cdf" pro nil (lib "make_mag_cdf.pro" nil "sdtlib") "%s, data_str" (nil))
   ("time_to_str" fun nil (lib "time_to_str.pro" nil "sdtlib") "Result = %s(secin)" (nil ("dateonly") ("FMT") ("MSEC")))
   ("Get_v1_v4_SURV" fun nil (lib "get_v1_v4_surv.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("START")))
   ("Get_fa_tsh" fun nil (lib "get_fa_tsh.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("date_doy_sec" pro nil (lib "date_doy_sec.pro" nil "sdtlib") "%s, time, year, doy, sec" (nil))
   ("load_fields_modebar" pro nil (lib "load_fields_modebar.pro" nil "sdtlib") "%s" (nil ("particles")))
   ("ff_pdqfit" pro nil (lib "ff_pdqfit.pro" nil "sdtlib") "%s, dat, phs, coeff, phsf" (nil ("funct") ("m") ("n_fitpts") ("out") ("period") ("sigma") ("slide")))
   ("ONE_PHI_COS_SIN" fun nil (lib "ff_pdqfit.pro" nil "sdtlib") "Result = %s(X, M)" (nil))
   ("ONE_PHI_COS_SIN_PHICOS_PHISIN" fun nil (lib "ff_pdqfit.pro" nil "sdtlib") "Result = %s(X, M)" (nil))
   ("fastorbupdate" pro nil (lib "fastorbupdate.pro" nil "sdtlib") "%s" (nil ("first") ("last")))
   ("fa_fields_spin_ave" pro nil (lib "fa_fields_spin_ave.pro" nil "sdtlib") "%s, data" (nil ("BOX") ("CENTER") ("DQD") ("FUNCT") ("INTERVAL") ("MAG") ("NAME") ("NOTCH") ("PHASE") ("SLIDE") ("STORE") ("SUN") ("SVD")))
   ("load_wi_elpd_3dp" pro nil (lib "load_wi_elpd_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("no_plot") ("nvdata") ("plot_it") ("polar") ("prefix") ("time_range")))
   ("options" pro nil (lib "options.pro" nil "sdtlib") "%s, struct, tag_name, value" (nil ("default") ("delete") ("get")))
   ("Get_fa_tbp_3d" fun nil (lib "get_fa_tbp_3d.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("get_iss" fun nil (lib "get_iss.pro" nil "sdtlib") "Result = %s(time)" (nil ("ADVANCE") ("EN") ("RETREAT") ("START") ("VARARR")))
   ("timesec" fun nil (lib "timesec.pro" nil "sdtlib") "Result = %s(stringin)" (nil ("carries")))
   ("auroral_zone" fun nil (lib "auroral_zone.pro" nil "sdtlib") "Result = %s(mlt, q)" (nil ("degrees") ("latitude") ("poleward") ("south")))
   ("xfastorbnews" pro nil (lib "xfastorbnews.pro" nil "sdtlib") "%s" (nil ("group")))
   ("ff_info" fun nil (lib "ff_info.pro" nil "sdtlib") "Result = %s(dqd)" (nil ("notch") ("pot") ("talk")))
   ("Get_fa_tbh" fun nil (lib "get_fa_tbh.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("cumdist" pro nil (lib "cumdist.pro" nil "sdtlib") "%s, data" (nil ("_extra") ("BINSIZE") ("CUMDIST") ("MAX") ("MIN") ("NAN") ("NO_ERROR") ("NO_PLOT") ("REVERSE_INDICES") ("SIGMA") ("XBINS")))
   ("md_dims_ok" fun nil (lib "md_dims_ok.pro" nil "sdtlib") "Result = %s(dat)" (nil))
   ("get_fa_ees_sp" fun nil (lib "get_fa_ees_sp.pro" nil "sdtlib") "Result = %s(time)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START") ("VARARR")))
   ("t_3d" fun nil (lib "t_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("datesec_var" fun nil (lib "datesec_var.pro" nil "sdtlib") "Result = %s(day, mon, yr)" (nil))
   ("plot_fa_crossing" pro nil (lib "plot_fa_crossing.pro" nil "sdtlib") "%s" (nil ("ACTIVITY") ("ALMANAC_INFO") ("BERKELEY") ("CANBERRA") ("DRAG_PROP") ("FILL") ("GIF") ("GREY") ("KIRUNA") ("MAGPOLE") ("MCMURDO") ("ORBIT") ("PC") ("POKER") ("POLAR") ("POST") ("SANTIAGO") ("SOUTH") ("SSCZONE") ("TMAX") ("TMIN") ("USER_OVERPLOT") ("VECTOR_FONTS") ("VIEWPOINT") ("WALLOPS") ("WHOLE") ("WINSIZE") ("XMARK") ("ZOOM")))
   ("get_fa_mscrub_singerrs" fun nil (lib "get_fa_mscrub_singerrs.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("START")))
   ("Get_fa_tba_3d" fun nil (lib "get_fa_tba_3d.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("symm3d" fun nil (lib "symm3d.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ESTEPS")))
   ("Get_fa_tb_3d_eq" fun nil (lib "get_fa_tb_3d_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("get_fa_flds" pro nil (lib "get_fa_flds.pro" nil "sdtlib") "%s, dqd, time1, time2" (nil ("ALL") ("BACKGROUND") ("CALIBRATE") ("DEFAULT") ("EN") ("NPTS") ("PANB") ("PANF") ("REPAIR") ("SPIN") ("START") ("STORE") ("STRUCTURE") ("YBINS")))
   ("add_bdir" pro nil (lib "add_bdir.pro" nil "sdtlib") "%s, dat, source" (nil))
   ("xfastorbcfg" pro nil (lib "xfastorbcfg.pro" nil "sdtlib") "%s" (nil))
   ("spec2d" pro nil (lib "spec2d.pro" nil "sdtlib") "%s, tempdat" (nil ("ANGLE") ("ARANGE") ("BINS") ("COLOR") ("ERROR_BARS") ("LABEL") ("LABSIZE") ("LIMITS") ("MSEC") ("NO_SORT") ("OVERPLOT") ("PSYM") ("RETRACE") ("THICK") ("TITLE") ("UNITS") ("VEL") ("XMARGIN") ("XTITLE") ("YMARGIN") ("YTITLE")))
   ("normal_to_data" fun nil (lib "normal_to_data.pro" nil "sdtlib") "Result = %s(normv, s)" (nil))
   ("tplot_options" pro nil (lib "tplot_options.pro" nil "sdtlib") "%s, string, value" (nil ("full_trange") ("get_options") ("help") ("options") ("refdate") ("title") ("trange") ("var_label") ("version") ("window")))
   ("Get_fa_tsp_eq_sp" fun nil (lib "get_fa_tsp_eq_sp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("SPIN_AVER") ("START")))
   ("ff_ylim" pro nil (lib "ff_ylim.pro" nil "sdtlib") "%s, pname, ylim" (nil ("log") ("names") ("vals") ("yticks")))
   ("plot_fa_k0_acf" pro nil (lib "plot_fa_k0_acf.pro" nil "sdtlib") "%s, acnames" (nil))
   ("Get_fa_tbh_eq" fun nil (lib "get_fa_tbh_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("nn" fun nil (lib "nn.pro" nil "sdtlib") "Result = %s(data, time)" (nil ("silent")))
   ("fastorbgetdata" pro nil (lib "fastorbgetdata.pro" nil "sdtlib") "%s" (nil))
   ("xfastorbvele" pro nil (lib "xfastorbvele.pro" nil "sdtlib") "%s" (nil ("group")))
   ("j_3d" fun nil (lib "j_3d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("Str" fun nil (lib "str.pro" nil "sdtlib") "Result = %s(arg)" (nil ("_extra")))
   ("get_fa_seb4_hdr" fun nil (lib "get_fa_seb4_hdr.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("INDEX")))
   ("edit3dbins" pro nil (lib "edit3dbins.pro" nil "sdtlib") "%s, dat, bins, lat, lon" (nil ("EBINS") ("SUM_EBINS")))
   ("Get_ts_from_sdt" fun nil (lib "get_ts_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code)" (nil ("ALL") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START") ("t1") ("t2")))
   ("load_fa_k0_orb" pro nil (lib "load_fa_k0_orb.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("nodata") ("orbit") ("trange") ("var")))
   ("ff_quickfit" pro nil (lib "ff_quickfit.pro" nil "sdtlib") "%s, dat, phs" (nil ("ec") ("es") ("n_fitpts") ("period") ("phsf") ("slide") ("zero")))
   ("cross_spec" pro nil (lib "cross_spec.pro" nil "sdtlib") "%s, sig1, sig2, coh, phase, freq" (nil ("N_AVE") ("NPTS") ("OVERLAP") ("SAMPLE")))
   ("vth_2d_fs" fun nil (lib "vth_2d_fs.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("ff_dsp_power" pro nil (lib "ff_dsp_power.pro" nil "sdtlib") "%s" (nil ("f_range") ("mag") ("power") ("store")))
   ("pad" fun nil (lib "pad.pro" nil "sdtlib") "Result = %s(dat)" (nil ("BDIR") ("BINS") ("ESTEPS") ("magf") ("NUM_PA")))
   ("Get_fa_tba" fun nil (lib "get_fa_tba.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("ff_qfit" pro nil (lib "ff_qfit.pro" nil "sdtlib") "%s, data, phs" (nil ("bad_pts") ("do_sigma") ("ec") ("es") ("max_err") ("n_fitpts") ("out") ("period") ("phsf") ("sigma") ("slide") ("zero")))
   ("p_2d_fs" fun nil (lib "p_2d_fs.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("make_quality" fun nil (lib "make_quality.pro" nil "sdtlib") "Result = %s(data)" (nil))
   ("bytes2long" fun nil (lib "read_au_ulaw.pro" nil "sdtlib") "Result = %s(byte_array)" (nil))
   ("read_au_ulaw" pro nil (lib "read_au_ulaw.pro" nil "sdtlib") "%s, file, data" (nil ("CHANNELS") ("OFFSET") ("PLAY") ("RATE") ("SIZE") ("TEXT")))
   ("draw_color_scale" pro nil (lib "draw_color_scale.pro" nil "sdtlib") "%s" (nil ("brange") ("charsize") ("log") ("offset") ("position") ("range") ("title")))
   ("wi" pro nil (lib "wi.pro" nil "sdtlib") "%s, wnum" (nil ("limits")))
   ("cumdist_compare" pro nil (lib "cumdist_compare.pro" nil "sdtlib") "%s, x1, x2" (nil ("_extra") ("binsize") ("cumdist1") ("cumdist2") ("label1") ("label2") ("label3") ("no_error") ("no_legend") ("sigma1") ("sigma2") ("xbins") ("xlabel3") ("xlegend") ("ylabel3") ("ylegend")))
   ("print_cdf_info" pro nil (lib "print_cdf_info.pro" nil "sdtlib") "%s, filename" (nil))
   ("velocity" fun nil (lib "velocity.pro" nil "sdtlib") "Result = %s(nrg, mass)" (nil ("electron") ("momen_on_mass") ("true_veloc")))
   ("SVDFIT2" fun nil (lib "svdfit2.pro" nil "sdtlib") "Result = %s(X, Y, M)" (nil ("CHISQ") ("COVAR") ("Funct") ("SINGULAR") ("VARIANCE") ("WEIGHT") ("YFIT")))
   ("ylim" pro nil (lib "ylim.pro" nil "sdtlib") "%s, str, min, max, log" (nil ("default") ("log") ("style")))
   ("defined" fun nil (lib "defined.pro" nil "sdtlib") "Result = %s(var)" (nil))
   ("vel_disp_fit" pro nil (lib "vel_disp_fit.pro" nil "sdtlib") "%s" (nil ("IONMASS")))
   ("load_wi_sp_mfi" pro nil (lib "load_wi_sp_mfi.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("name") ("nodata") ("polar") ("prefix") ("time_range")))
   ("Get_fa_th_3d_eq" fun nil (lib "get_fa_th_3d_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("time_struct" fun nil (lib "time_struct.pro" nil "sdtlib") "Result = %s(time)" (nil ("epoch") ("no_clean")))
   ("plot_fa_k0_orb" pro nil (lib "plot_fa_k0_orb.pro" nil "sdtlib") "%s" (nil))
   ("get_orbfile_epoch" fun nil (lib "get_orbfile_epoch.pro" nil "sdtlib") "Result = %s(orbit)" (nil ("orbit_file")))
   ("load_wi_pm_3dp" pro nil (lib "load_wi_pm_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("prefix") ("time_range") ("vthermal")))
   ("loadcdfstr" pro nil (lib "loadcdfstr.pro" nil "sdtlib") "%s, data0, novardata" (nil ("append") ("filenames") ("novarnames") ("tagnames") ("time") ("varnames")))
   ("icon_scale" fun nil (lib "icon_crossing_idl5.pro" nil "sdtlib") "Result = %s(percent, siz)" (nil ("devsize")))
   ("icon_crossing_idl5" pro nil (lib "icon_crossing_idl5.pro" nil "sdtlib") "%s" (nil ("ORBIT") ("SOUTH")))
   ("total_trailing_dims" fun nil (lib "total_trailing_dims.pro" nil "sdtlib") "Result = %s(value)" (nil))
   ("fast_e_summary" pro nil (lib "fast_e_summary.pro" nil "sdtlib") "%s" (nil ("BW") ("k0")))
   ("get_" fun nil (lib "get_1d_from_sdt_template.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("EN") ("RETREAT") ("START")))
   ("Get_fa_ses_c" fun nil (lib "get_fa_ses_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("Get_fa_seb_c" fun nil (lib "get_fa_seb_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("c_2d" fun nil (lib "c_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("datetimesec_doy" fun nil (lib "datetimesec_doy.pro" nil "sdtlib") "Result = %s(yrin, doyin, hrin, minin, secin, mscin)" (nil))
   ("plot_orbit2" pro nil (lib "plot_orbit2.pro" nil "sdtlib") "%s, data_name" (nil ("bow") ("dat3d") ("date_lab") ("freq") ("init_date_lab") ("init_freq") ("limits") ("nocolor") ("rho") ("tplot") ("trange") ("xzplot") ("yzplot")))
   ("load_spin_times" fun nil (lib "load_spin_times.pro" nil "sdtlib") "Result = %s" (nil ("orbit_env") ("spin") ("test") ("times")))
   ("zlim" pro nil (lib "zlim.pro" nil "sdtlib") "%s, lim, min, max, log" (nil))
   ("transform_mag_geo" pro nil (lib "transform_mag_geo.pro" nil "sdtlib") "%s, lat, lng, tlat, tlng" (nil ("DEGREES") ("INVERSE") ("YEAR")))
   ("strippath" fun nil (lib "strippath.pro" nil "sdtlib") "Result = %s(full_path)" (nil))
   ("get_dqi_info" fun nil (lib "get_dqi_info.pro" nil "sdtlib") "Result = %s(sat, dqi)" (nil ("INDEX") ("TIME")))
   ("frac_indices" fun nil (lib "frac_indices.pro" nil "sdtlib") "Result = %s(ff, ww)" (nil))
   ("cdf_info" fun nil (lib "cdf_info.pro" nil "sdtlib") "Result = %s(id)" (nil))
   ("spec3d" pro nil (lib "spec3d.pro" nil "sdtlib") "%s, tempdat" (nil ("BDIR") ("BINS") ("COLOR") ("LABEL") ("LIMITS") ("OVERPLOT") ("PHI") ("PITCHANGLE") ("SUNDIR") ("THETA") ("UNITS") ("VECTOR") ("VELOCITY")))
   ("str_to_time" fun nil (lib "str_to_time.pro" nil "sdtlib") "Result = %s(stringin)" (nil))
   ("strplot" pro nil (lib "strplot.pro" nil "sdtlib") "%s, x, y" (nil ("data") ("di") ("limits") ("overplot")))
   ("Get_fa_seb1_c" fun nil (lib "get_fa_seb1_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("gopen" pro nil (lib "gopen.pro" nil "sdtlib") "%s, n" (nil ("bw") ("color") ("copy") ("ctable") ("directory") ("interp") ("set_character_size") ("xsize") ("ysize")))
   ("Get_fa_seb6_c" fun nil (lib "get_fa_seb6_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("fa_fields_bufs" pro nil (lib "fa_fields_bufs.pro" nil "sdtlib") "%s, dat, n" (nil ("buf_ends") ("buf_starts") ("delta_t")))
   ("fa_fields_dsp" pro nil (lib "fa_fields_dsp.pro" nil "sdtlib") "%s, dqd_name_in" (nil ("all") ("dat") ("plot") ("t1") ("t2") ("use_HG")))
   ("Tms_himass_get_masses" fun nil (lib "tms_himass_get_masses.pro" nil "sdtlib") "Result = %s(mass, dmass, bin)" (nil))
   ("makecdf2" pro nil (lib "makecdf2.pro" nil "sdtlib") "%s, data" (nil ("cdffile") ("gattributes") ("overwrite") ("sktfile") ("status") ("vattributes") ("verbose")))
   ("gettime" fun nil (lib "gettime.pro" nil "sdtlib") "Result = %s(x)" (nil ("CURSOR") ("KEYBOARD") ("REFDATE") ("values")))
   ("get_symm" pro nil (lib "get_symm.pro" nil "sdtlib") "%s" (nil ("SPHI") ("STHETA") ("TIME") ("USE_DIR") ("USE_MAG") ("USE_Q")))
   ("plot3d_options" pro nil (lib "plot3d_options.pro" nil "sdtlib") "%s" (nil ("COMPRESS") ("GRID") ("LATITUDE") ("LOG") ("LONGITUDE") ("MAP") ("SMOOTH") ("TRIANGULATE") ("zrange")))
   ("Get_fa_seb4_c" fun nil (lib "get_fa_seb4_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("Get_fa_ses" fun nil (lib "get_fa_ses.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("make_cdf_structs" pro nil (lib "make_cdf_structs.pro" nil "sdtlib") "%s, tp_namelist, datavary, datanovary" (nil ("times")))
   ("Get_cache_ts_1p_from_sdt" fun nil (lib "get_cache_ts_1p_from_sdt.pro" nil "sdtlib") "Result = %s(data_name, sat_code, cache_hsk, cache)" (nil ("CACHE_SIZE") ("FLUSH") ("INDEX") ("TIME")))
   ("get_fa_orbit_rd_conf_file" pro nil (lib "get_fa_orbit.pro" nil "sdtlib") "%s, filename, param_name, param_value, status" (nil))
   ("get_fa_orbit" pro nil (lib "get_fa_orbit.pro" nil "sdtlib") "%s, arg1, arg2" (nil ("addfp") ("all") ("definitive") ("delta_t") ("drag_prop") ("gse") ("no_store") ("orbit_file") ("status") ("struc") ("time_array") ("verbose")))
   ("plot_fa_k0_ies" pro nil (lib "plot_fa_k0_ies.pro" nil "sdtlib") "%s" (nil))
   ("popen" pro nil (lib "popen.pro" nil "sdtlib") "%s, n" (nil ("aspect") ("bw") ("color") ("copy") ("ctable") ("directory") ("encapsulated") ("font") ("interp") ("land") ("port") ("printer") ("xsize") ("ysize")))
   ("make_esa_cdf" pro nil (lib "make_esa_cdf.pro" nil "sdtlib") "%s, data_str" (nil ("gap_time") ("NBINS") ("NENERGY") ("T1") ("T2") ("units")))
   ("detect_2d_fields" fun nil (lib "detect_2d_fields.pro" nil "sdtlib") "Result = %s(dqd)" (nil))
   ("Get_fa_tbp" fun nil (lib "get_fa_tbp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("cdf_time_range" fun nil (lib "make_cdf_index.pro" nil "sdtlib") "Result = %s(cdffile)" (nil ("fast")))
   ("make_cdf_index" pro nil (lib "make_cdf_index.pro" nil "sdtlib") "%s, pattern" (nil ("data_direc") ("index_filename") ("no_duplicates")))
   ("get_fa_orbit_geomag" fun nil (lib "get_fa_orbit_geomag.pro" nil "sdtlib") "Result = %s(orbit)" (nil))
   ("load_fa_k0_acf" pro nil (lib "load_fa_k0_acf.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("orbit") ("trange") ("var")))
   ("load_wi_ehsp_3dp" pro nil (lib "load_wi_ehsp_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("prefix") ("time_range")))
   ("t_2d" fun nil (lib "t_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("spread" fun nil (lib "spread.pro" nil "sdtlib") "Result = %s(x, window)" (nil ("maxdex") ("mindex")))
   ("att_anim" pro nil (lib "att_anim.pro" nil "sdtlib") "%s, time" (nil ("N_FRAMES") ("NOTEXT")))
   ("ff_interp" fun nil (lib "ff_interp.pro" nil "sdtlib") "Result = %s(time1, time2, data2)" (nil ("delt_t") ("nearest") ("ptr") ("quiet") ("spline")))
   ("make_orbit_cdf_enhanced" pro nil (lib "make_orbit_cdf_enhanced.pro" nil "sdtlib") "%s, dataset, orbit" (nil ("length") ("sktfile") ("status") ("verbose") ("versionnumber")))
   ("ra_parse_value" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(line, type, sptr, len)" (nil ("missing_value") ("nlut")))
   ("ra_resize_pointers" pro nil (lib "read_ascii_nonx.pro" nil "sdtlib") "%s, p_vals, blk_size" (nil))
   ("ra_parse_d_values" pro nil (lib "read_ascii_nonx.pro" nil "sdtlib") "%s, line, types, p_vals, floc, rec_count, delimit, nlut, missing_value" (nil))
   ("ra_get_next_record" pro nil (lib "read_ascii_nonx.pro" nil "sdtlib") "%s, template, unit, lines" (nil ("end_reached")))
   ("ra_read_from_templ" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(name, template, start_record, records_to_read, doVerbose, num_fields_read, fieldNames, rec_count)" (nil ("header")))
   ("ra_valid_template" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(template, message)" (nil))
   ("ra_stringit" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(value)" (nil))
   ("ra_check_file" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(fname)" (nil ("default_num_columns")))
   ("read_ascii_nonx" fun nil (lib "read_ascii_nonx.pro" nil "sdtlib") "Result = %s(file)" (nil ("COMMENT_SYMBOL") ("COUNT") ("DATA_START") ("DELIMITER") ("HEADER") ("MISSING_VALUE") ("NUM_RECORDS") ("RECORD_START") ("TEMPLATE") ("VERBOSE")))
   ("convert_tms_units" pro nil (lib "convert_tms_units.pro" nil "sdtlib") "%s, data, units" (nil ("sc") ("SCALE")))
   ("rerange" pro nil (lib "rerange.pro" nil "sdtlib") "%s, lng, lat" (nil ("degrees")))
   ("Get_fa_tpp" fun nil (lib "get_fa_tpp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("crosshairs" pro nil (lib "crosshairs.pro" nil "sdtlib") "%s, x, y" (nil ("color") ("legend")))
   ("load_wi_elsp_3dp" pro nil (lib "load_wi_elsp_3dp.pro" nil "sdtlib") "%s" (nil ("data") ("masterfile") ("nvdata") ("polar") ("prefix") ("time_range")))
   ("ff_mag_sun" pro nil (lib "ff_mag_sun.pro" nil "sdtlib") "%s, mag" (nil ("fit") ("plot") ("talk")))
   ("ff_magfit_sm" fun nil (lib "ff_magfit_sm.pro" nil "sdtlib") "Result = %s(mag, fit)" (nil ("max_sig") ("n_sm") ("talk")))
   ("normn3" fun nil (lib "normn3.pro" nil "sdtlib") "Result = %s(x)" (nil))
   ("load_so_ern" pro nil (lib "load_so_ern.pro" nil "sdtlib") "%s" (nil ("time_range")))
   ("make_orbit_cdf" pro nil (lib "make_orbit_cdf.pro" nil "sdtlib") "%s, data_str" (nil))
   ("conv_units" fun nil (lib "conv_units.pro" nil "sdtlib") "Result = %s(data, units)" (nil ("SCALE")))
   ("loadallcdf" pro nil (lib "loadallcdf.pro" nil "sdtlib") "%s" (nil ("cdfnames") ("data") ("environvar") ("FILENAMES") ("indexfile") ("MASTERFILE") ("novardata") ("novarnames") ("param") ("tagnames") ("time_range") ("tplot")))
   ("Get_fa_seb5" fun nil (lib "get_fa_seb5.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("INDEX") ("RETREAT") ("START")))
   ("tplot_names" pro nil (lib "tplot_names.pro" nil "sdtlib") "%s, datanames" (nil ("names") ("time_range")))
   ("get_fa_orbatt" fun nil (lib "get_fa_orbatt.pro" nil "sdtlib") "Result = %s(start, finish, qtylist)" (nil))
   ("heatflux" fun nil (lib "heatflux.pro" nil "sdtlib") "Result = %s(dat)" (nil ("ESTEPRANGE")))
   ("get_" fun nil (lib "get_ts_from_sdt_template.pro" nil "sdtlib") "Result = %s(time1, time2)" (nil ("ALL") ("EN") ("NPTS") ("PANB") ("PANF") ("START")))
   ("Get_fa_tbo_eq" fun nil (lib "get_fa_tbo_eq.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("START")))
   ("fa_fields_despin_HG" pro nil (lib "fa_fields_despin_hg.pro" nil "sdtlib") "%s, V58, V14" (nil ("nave") ("nfft") ("phase") ("plot") ("pole") ("save_mem") ("slide") ("spec") ("t1") ("t2") ("V14_gain")))
   ("oplot_err" pro nil (lib "oplot_err.pro" nil "sdtlib") "%s, xt, lower, upper" (nil))
   ("fairb_FAST_conj" pro nil (lib "fairb_fast_conj.pro" nil "sdtlib") "%s, t1in, t2in, times" (nil ("DRAG") ("FILE") ("FOOT") ("LAT") ("LATTOL") ("LNG") ("LNGTOL") ("MLTTOL") ("NOLOAD")))
   ("timespan" pro nil (lib "timespan.pro" nil "sdtlib") "%s, t1, dt" (nil ("DAYS") ("HOURS") ("MINUTES") ("SECONDS")))
   ("auroral_zone_ssc" fun nil (lib "auroral_zone_ssc.pro" nil "sdtlib") "Result = %s(mltinput)" (nil ("degrees") ("poleward") ("south")))
   ("day_to_year_doy" pro nil (lib "day_to_year_doy.pro" nil "sdtlib") "%s, day, y, d" (nil))
   ("loadct2" pro nil (lib "loadct2.pro" nil "sdtlib") "%s, ct" (nil ("file") ("invert") ("reverse")))
   ("mag_to_geo" pro nil (lib "mag_to_geo.pro" nil "sdtlib") "%s, lat, lon" (nil ("degrees") ("mag")))
   ("find_last_epoch" fun nil (lib "find_last_epoch.pro" nil "sdtlib") "Result = %s(file)" (nil ("DEFINITIVE") ("DOY") ("ORBIT") ("TIME") ("YEAR")))
   ("ff_mag_speed" pro nil (lib "ff_mag_speed.pro" nil "sdtlib") "%s, mag" (nil ("fit") ("min_streak") ("plot") ("ptr") ("talk")))
   ("vth_2d" fun nil (lib "vth_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("Get_fa_tso_eq_sp" fun nil (lib "get_fa_tso_eq_sp.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CALIB") ("EN") ("RETREAT") ("SPIN_AVER") ("START")))
   ("je_2d" fun nil (lib "je_2d.pro" nil "sdtlib") "Result = %s(dat2)" (nil ("ANGLE") ("ARANGE") ("BINS") ("EBINS") ("ENERGY") ("ERANGE")))
   ("xfastorbvfil" pro nil (lib "xfastorbvfil.pro" nil "sdtlib") "%s" (nil ("group")))
   ("Get_fa_eeb_c" fun nil (lib "get_fa_eeb_c.pro" nil "sdtlib") "Result = %s(inputTime)" (nil ("ADVANCE") ("CACHE_SIZE") ("CALIB") ("EN") ("FLUSH") ("INDEX") ("RETREAT") ("START")))
   ("FA_TS_EFF" fun nil (lib "fa_ts_eff.pro" nil "sdtlib") "Result = %s(en, pac, spec, mode, spin_section, eff_version, time)" (nil ("debug")))
   ("ff_dsp" pro nil (lib "ff_dsp.pro" nil "sdtlib") "%s, dqd_name" (nil ("dat") ("store") ("t1") ("t2") ("use_HG")))
   ("time_align" pro nil (lib "time_align.pro" nil "sdtlib") "%s, tplist" (nil ("output_names") ("overwrite") ("status") ("times")))
   ("isin" fun nil (lib "isin.pro" nil "sdtlib") "Result = %s(a, b)" (nil))
   ("Get_fa_ees_ts" fun nil (lib "get_fa_seb_ts.pro" nil "sdtlib") "Result = %s(t1, t2)" (nil ("ALL") ("CALIB") ("EN") ("IDXST") ("NPTS") ("PANB") ("PANF") ("START")))
   ("summary_plot_times" pro nil (lib "summary_plot_times.pro" nil "sdtlib") "%s" (nil ("fresh") ("orbit_num") ("ptypes") ("splot_time") ("test") ("times") ("use_data")))
   ("ask" fun nil (lib "ask.pro" nil "sdtlib") "Result = %s(question)" (nil))
   ("fa_fields_despin_16k" pro nil (lib "fa_fields_despin_16k.pro" nil "sdtlib") "%s, V58, V14, V1458" (nil ("fudge") ("mag_notch") ("nave") ("nfft") ("phase") ("save_mem") ("shadow_notch") ("slide") ("spec") ("store") ("t1") ("t2")))
   ("load_fa_k0_ies" pro nil (lib "load_fa_k0_ies.pro" nil "sdtlib") "%s" (nil ("dir") ("dvar") ("environvar") ("filenames") ("indexfile") ("no_orbit") ("orbit") ("trange") ("var")))))
